// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: app.proto

package com_elarian_hera_proto

import (
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AppConnectionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       string               `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	AppId       string               `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AuthToken   string               `protobuf:"bytes,3,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	Timestamp   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SimplexMode bool                 `protobuf:"varint,5,opt,name=simplex_mode,json=simplexMode,proto3" json:"simplex_mode,omitempty"`
}

func (x *AppConnectionMetadata) Reset() {
	*x = AppConnectionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionMetadata) ProtoMessage() {}

func (x *AppConnectionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionMetadata.ProtoReflect.Descriptor instead.
func (*AppConnectionMetadata) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{0}
}

func (x *AppConnectionMetadata) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *AppConnectionMetadata) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppConnectionMetadata) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *AppConnectionMetadata) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AppConnectionMetadata) GetSimplexMode() bool {
	if x != nil {
		return x.SimplexMode
	}
	return false
}

type AppToServerCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Entry:
	//	*AppToServerCommand_GetCustomerState
	//	*AppToServerCommand_AdoptCustomerState
	//	*AppToServerCommand_AddCustomerReminder
	//	*AppToServerCommand_AddCustomerReminderTag
	//	*AppToServerCommand_CancelCustomerReminder
	//	*AppToServerCommand_CancelCustomerReminderTag
	//	*AppToServerCommand_UpdateCustomerTag
	//	*AppToServerCommand_DeleteCustomerTag
	//	*AppToServerCommand_UpdateCustomerSecondaryId
	//	*AppToServerCommand_DeleteCustomerSecondaryId
	//	*AppToServerCommand_LeaseCustomerMetadata
	//	*AppToServerCommand_UpdateCustomerMetadata
	//	*AppToServerCommand_DeleteCustomerMetadata
	//	*AppToServerCommand_SendMessage
	//	*AppToServerCommand_SendMessageTag
	//	*AppToServerCommand_ReplyToMessage
	//	*AppToServerCommand_MessagingConsent
	//	*AppToServerCommand_InitiatePayment
	//	*AppToServerCommand_MakeVoiceCall
	Entry isAppToServerCommand_Entry `protobuf_oneof:"entry"`
}

func (x *AppToServerCommand) Reset() {
	*x = AppToServerCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppToServerCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppToServerCommand) ProtoMessage() {}

func (x *AppToServerCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppToServerCommand.ProtoReflect.Descriptor instead.
func (*AppToServerCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{1}
}

func (m *AppToServerCommand) GetEntry() isAppToServerCommand_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *AppToServerCommand) GetGetCustomerState() *GetCustomerStateCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_GetCustomerState); ok {
		return x.GetCustomerState
	}
	return nil
}

func (x *AppToServerCommand) GetAdoptCustomerState() *AdoptCustomerStateCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_AdoptCustomerState); ok {
		return x.AdoptCustomerState
	}
	return nil
}

func (x *AppToServerCommand) GetAddCustomerReminder() *AddCustomerReminderCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_AddCustomerReminder); ok {
		return x.AddCustomerReminder
	}
	return nil
}

func (x *AppToServerCommand) GetAddCustomerReminderTag() *AddCustomerReminderTagCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_AddCustomerReminderTag); ok {
		return x.AddCustomerReminderTag
	}
	return nil
}

func (x *AppToServerCommand) GetCancelCustomerReminder() *CancelCustomerReminderCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_CancelCustomerReminder); ok {
		return x.CancelCustomerReminder
	}
	return nil
}

func (x *AppToServerCommand) GetCancelCustomerReminderTag() *CancelCustomerReminderTagCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_CancelCustomerReminderTag); ok {
		return x.CancelCustomerReminderTag
	}
	return nil
}

func (x *AppToServerCommand) GetUpdateCustomerTag() *UpdateCustomerTagCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_UpdateCustomerTag); ok {
		return x.UpdateCustomerTag
	}
	return nil
}

func (x *AppToServerCommand) GetDeleteCustomerTag() *DeleteCustomerTagCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_DeleteCustomerTag); ok {
		return x.DeleteCustomerTag
	}
	return nil
}

func (x *AppToServerCommand) GetUpdateCustomerSecondaryId() *UpdateCustomerSecondaryIdCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_UpdateCustomerSecondaryId); ok {
		return x.UpdateCustomerSecondaryId
	}
	return nil
}

func (x *AppToServerCommand) GetDeleteCustomerSecondaryId() *DeleteCustomerSecondaryIdCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_DeleteCustomerSecondaryId); ok {
		return x.DeleteCustomerSecondaryId
	}
	return nil
}

func (x *AppToServerCommand) GetLeaseCustomerMetadata() *LeaseCustomerMetadataCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_LeaseCustomerMetadata); ok {
		return x.LeaseCustomerMetadata
	}
	return nil
}

func (x *AppToServerCommand) GetUpdateCustomerMetadata() *UpdateCustomerMetadataCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_UpdateCustomerMetadata); ok {
		return x.UpdateCustomerMetadata
	}
	return nil
}

func (x *AppToServerCommand) GetDeleteCustomerMetadata() *DeleteCustomerMetadataCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_DeleteCustomerMetadata); ok {
		return x.DeleteCustomerMetadata
	}
	return nil
}

func (x *AppToServerCommand) GetSendMessage() *SendMessageCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_SendMessage); ok {
		return x.SendMessage
	}
	return nil
}

func (x *AppToServerCommand) GetSendMessageTag() *SendMessageTagCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_SendMessageTag); ok {
		return x.SendMessageTag
	}
	return nil
}

func (x *AppToServerCommand) GetReplyToMessage() *ReplyToMessageCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_ReplyToMessage); ok {
		return x.ReplyToMessage
	}
	return nil
}

func (x *AppToServerCommand) GetMessagingConsent() *MessagingConsentCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_MessagingConsent); ok {
		return x.MessagingConsent
	}
	return nil
}

func (x *AppToServerCommand) GetInitiatePayment() *InitiatePaymentCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_InitiatePayment); ok {
		return x.InitiatePayment
	}
	return nil
}

func (x *AppToServerCommand) GetMakeVoiceCall() *MakeVoiceCallCommand {
	if x, ok := x.GetEntry().(*AppToServerCommand_MakeVoiceCall); ok {
		return x.MakeVoiceCall
	}
	return nil
}

type isAppToServerCommand_Entry interface {
	isAppToServerCommand_Entry()
}

type AppToServerCommand_GetCustomerState struct {
	GetCustomerState *GetCustomerStateCommand `protobuf:"bytes,1,opt,name=get_customer_state,json=getCustomerState,proto3,oneof"`
}

type AppToServerCommand_AdoptCustomerState struct {
	AdoptCustomerState *AdoptCustomerStateCommand `protobuf:"bytes,2,opt,name=adopt_customer_state,json=adoptCustomerState,proto3,oneof"`
}

type AppToServerCommand_AddCustomerReminder struct {
	AddCustomerReminder *AddCustomerReminderCommand `protobuf:"bytes,3,opt,name=add_customer_reminder,json=addCustomerReminder,proto3,oneof"`
}

type AppToServerCommand_AddCustomerReminderTag struct {
	AddCustomerReminderTag *AddCustomerReminderTagCommand `protobuf:"bytes,4,opt,name=add_customer_reminder_tag,json=addCustomerReminderTag,proto3,oneof"`
}

type AppToServerCommand_CancelCustomerReminder struct {
	CancelCustomerReminder *CancelCustomerReminderCommand `protobuf:"bytes,5,opt,name=cancel_customer_reminder,json=cancelCustomerReminder,proto3,oneof"`
}

type AppToServerCommand_CancelCustomerReminderTag struct {
	CancelCustomerReminderTag *CancelCustomerReminderTagCommand `protobuf:"bytes,6,opt,name=cancel_customer_reminder_tag,json=cancelCustomerReminderTag,proto3,oneof"`
}

type AppToServerCommand_UpdateCustomerTag struct {
	UpdateCustomerTag *UpdateCustomerTagCommand `protobuf:"bytes,7,opt,name=update_customer_tag,json=updateCustomerTag,proto3,oneof"`
}

type AppToServerCommand_DeleteCustomerTag struct {
	DeleteCustomerTag *DeleteCustomerTagCommand `protobuf:"bytes,8,opt,name=delete_customer_tag,json=deleteCustomerTag,proto3,oneof"`
}

type AppToServerCommand_UpdateCustomerSecondaryId struct {
	UpdateCustomerSecondaryId *UpdateCustomerSecondaryIdCommand `protobuf:"bytes,9,opt,name=update_customer_secondary_id,json=updateCustomerSecondaryId,proto3,oneof"`
}

type AppToServerCommand_DeleteCustomerSecondaryId struct {
	DeleteCustomerSecondaryId *DeleteCustomerSecondaryIdCommand `protobuf:"bytes,10,opt,name=delete_customer_secondary_id,json=deleteCustomerSecondaryId,proto3,oneof"`
}

type AppToServerCommand_LeaseCustomerMetadata struct {
	LeaseCustomerMetadata *LeaseCustomerMetadataCommand `protobuf:"bytes,11,opt,name=lease_customer_metadata,json=leaseCustomerMetadata,proto3,oneof"`
}

type AppToServerCommand_UpdateCustomerMetadata struct {
	UpdateCustomerMetadata *UpdateCustomerMetadataCommand `protobuf:"bytes,12,opt,name=update_customer_metadata,json=updateCustomerMetadata,proto3,oneof"`
}

type AppToServerCommand_DeleteCustomerMetadata struct {
	DeleteCustomerMetadata *DeleteCustomerMetadataCommand `protobuf:"bytes,13,opt,name=delete_customer_metadata,json=deleteCustomerMetadata,proto3,oneof"`
}

type AppToServerCommand_SendMessage struct {
	SendMessage *SendMessageCommand `protobuf:"bytes,14,opt,name=send_message,json=sendMessage,proto3,oneof"`
}

type AppToServerCommand_SendMessageTag struct {
	SendMessageTag *SendMessageTagCommand `protobuf:"bytes,15,opt,name=send_message_tag,json=sendMessageTag,proto3,oneof"`
}

type AppToServerCommand_ReplyToMessage struct {
	ReplyToMessage *ReplyToMessageCommand `protobuf:"bytes,16,opt,name=reply_to_message,json=replyToMessage,proto3,oneof"`
}

type AppToServerCommand_MessagingConsent struct {
	MessagingConsent *MessagingConsentCommand `protobuf:"bytes,17,opt,name=messaging_consent,json=messagingConsent,proto3,oneof"`
}

type AppToServerCommand_InitiatePayment struct {
	InitiatePayment *InitiatePaymentCommand `protobuf:"bytes,18,opt,name=initiate_payment,json=initiatePayment,proto3,oneof"`
}

type AppToServerCommand_MakeVoiceCall struct {
	MakeVoiceCall *MakeVoiceCallCommand `protobuf:"bytes,19,opt,name=make_voice_call,json=makeVoiceCall,proto3,oneof"`
}

func (*AppToServerCommand_GetCustomerState) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_AdoptCustomerState) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_AddCustomerReminder) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_AddCustomerReminderTag) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_CancelCustomerReminder) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_CancelCustomerReminderTag) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_UpdateCustomerTag) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_DeleteCustomerTag) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_UpdateCustomerSecondaryId) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_DeleteCustomerSecondaryId) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_LeaseCustomerMetadata) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_UpdateCustomerMetadata) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_DeleteCustomerMetadata) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_SendMessage) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_SendMessageTag) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_ReplyToMessage) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_MessagingConsent) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_InitiatePayment) isAppToServerCommand_Entry() {}

func (*AppToServerCommand_MakeVoiceCall) isAppToServerCommand_Entry() {}

type AppToServerCommandReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Entry:
	//	*AppToServerCommandReply_GetCustomerState
	//	*AppToServerCommandReply_LeaseCustomerMetadata
	//	*AppToServerCommandReply_UpdateCustomerState
	//	*AppToServerCommandReply_SendMessage
	//	*AppToServerCommandReply_MessagingConsent
	//	*AppToServerCommandReply_InitiatePayment
	//	*AppToServerCommandReply_MakeVoiceCall
	//	*AppToServerCommandReply_TagCommand
	Entry isAppToServerCommandReply_Entry `protobuf_oneof:"entry"`
}

func (x *AppToServerCommandReply) Reset() {
	*x = AppToServerCommandReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppToServerCommandReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppToServerCommandReply) ProtoMessage() {}

func (x *AppToServerCommandReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppToServerCommandReply.ProtoReflect.Descriptor instead.
func (*AppToServerCommandReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{2}
}

func (m *AppToServerCommandReply) GetEntry() isAppToServerCommandReply_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *AppToServerCommandReply) GetGetCustomerState() *GetCustomerStateReply {
	if x, ok := x.GetEntry().(*AppToServerCommandReply_GetCustomerState); ok {
		return x.GetCustomerState
	}
	return nil
}

func (x *AppToServerCommandReply) GetLeaseCustomerMetadata() *LeaseCustomerMetadataReply {
	if x, ok := x.GetEntry().(*AppToServerCommandReply_LeaseCustomerMetadata); ok {
		return x.LeaseCustomerMetadata
	}
	return nil
}

func (x *AppToServerCommandReply) GetUpdateCustomerState() *UpdateCustomerStateReply {
	if x, ok := x.GetEntry().(*AppToServerCommandReply_UpdateCustomerState); ok {
		return x.UpdateCustomerState
	}
	return nil
}

func (x *AppToServerCommandReply) GetSendMessage() *SendMessageReply {
	if x, ok := x.GetEntry().(*AppToServerCommandReply_SendMessage); ok {
		return x.SendMessage
	}
	return nil
}

func (x *AppToServerCommandReply) GetMessagingConsent() *MessagingConsentReply {
	if x, ok := x.GetEntry().(*AppToServerCommandReply_MessagingConsent); ok {
		return x.MessagingConsent
	}
	return nil
}

func (x *AppToServerCommandReply) GetInitiatePayment() *InitiatePaymentReply {
	if x, ok := x.GetEntry().(*AppToServerCommandReply_InitiatePayment); ok {
		return x.InitiatePayment
	}
	return nil
}

func (x *AppToServerCommandReply) GetMakeVoiceCall() *MakeVoiceCallReply {
	if x, ok := x.GetEntry().(*AppToServerCommandReply_MakeVoiceCall); ok {
		return x.MakeVoiceCall
	}
	return nil
}

func (x *AppToServerCommandReply) GetTagCommand() *TagCommandReply {
	if x, ok := x.GetEntry().(*AppToServerCommandReply_TagCommand); ok {
		return x.TagCommand
	}
	return nil
}

type isAppToServerCommandReply_Entry interface {
	isAppToServerCommandReply_Entry()
}

type AppToServerCommandReply_GetCustomerState struct {
	GetCustomerState *GetCustomerStateReply `protobuf:"bytes,1,opt,name=get_customer_state,json=getCustomerState,proto3,oneof"`
}

type AppToServerCommandReply_LeaseCustomerMetadata struct {
	LeaseCustomerMetadata *LeaseCustomerMetadataReply `protobuf:"bytes,2,opt,name=lease_customer_metadata,json=leaseCustomerMetadata,proto3,oneof"`
}

type AppToServerCommandReply_UpdateCustomerState struct {
	UpdateCustomerState *UpdateCustomerStateReply `protobuf:"bytes,3,opt,name=update_customer_state,json=updateCustomerState,proto3,oneof"`
}

type AppToServerCommandReply_SendMessage struct {
	SendMessage *SendMessageReply `protobuf:"bytes,4,opt,name=send_message,json=sendMessage,proto3,oneof"`
}

type AppToServerCommandReply_MessagingConsent struct {
	MessagingConsent *MessagingConsentReply `protobuf:"bytes,5,opt,name=messaging_consent,json=messagingConsent,proto3,oneof"`
}

type AppToServerCommandReply_InitiatePayment struct {
	InitiatePayment *InitiatePaymentReply `protobuf:"bytes,6,opt,name=initiate_payment,json=initiatePayment,proto3,oneof"`
}

type AppToServerCommandReply_MakeVoiceCall struct {
	MakeVoiceCall *MakeVoiceCallReply `protobuf:"bytes,7,opt,name=make_voice_call,json=makeVoiceCall,proto3,oneof"`
}

type AppToServerCommandReply_TagCommand struct {
	TagCommand *TagCommandReply `protobuf:"bytes,8,opt,name=tag_command,json=tagCommand,proto3,oneof"`
}

func (*AppToServerCommandReply_GetCustomerState) isAppToServerCommandReply_Entry() {}

func (*AppToServerCommandReply_LeaseCustomerMetadata) isAppToServerCommandReply_Entry() {}

func (*AppToServerCommandReply_UpdateCustomerState) isAppToServerCommandReply_Entry() {}

func (*AppToServerCommandReply_SendMessage) isAppToServerCommandReply_Entry() {}

func (*AppToServerCommandReply_MessagingConsent) isAppToServerCommandReply_Entry() {}

func (*AppToServerCommandReply_InitiatePayment) isAppToServerCommandReply_Entry() {}

func (*AppToServerCommandReply_MakeVoiceCall) isAppToServerCommandReply_Entry() {}

func (*AppToServerCommandReply_TagCommand) isAppToServerCommandReply_Entry() {}

type AuthTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string             `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Lifetime *duration.Duration `protobuf:"bytes,2,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
}

func (x *AuthTokenReply) Reset() {
	*x = AuthTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthTokenReply) ProtoMessage() {}

func (x *AuthTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthTokenReply.ProtoReflect.Descriptor instead.
func (*AuthTokenReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{3}
}

func (x *AuthTokenReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthTokenReply) GetLifetime() *duration.Duration {
	if x != nil {
		return x.Lifetime
	}
	return nil
}

type GetCustomerStateCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*GetCustomerStateCommand_CustomerId
	//	*GetCustomerStateCommand_CustomerNumber
	//	*GetCustomerStateCommand_SecondaryId
	Customer isGetCustomerStateCommand_Customer `protobuf_oneof:"customer"`
}

func (x *GetCustomerStateCommand) Reset() {
	*x = GetCustomerStateCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerStateCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerStateCommand) ProtoMessage() {}

func (x *GetCustomerStateCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerStateCommand.ProtoReflect.Descriptor instead.
func (*GetCustomerStateCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{4}
}

func (m *GetCustomerStateCommand) GetCustomer() isGetCustomerStateCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *GetCustomerStateCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*GetCustomerStateCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *GetCustomerStateCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*GetCustomerStateCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *GetCustomerStateCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*GetCustomerStateCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

type isGetCustomerStateCommand_Customer interface {
	isGetCustomerStateCommand_Customer()
}

type GetCustomerStateCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type GetCustomerStateCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type GetCustomerStateCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*GetCustomerStateCommand_CustomerId) isGetCustomerStateCommand_Customer() {}

func (*GetCustomerStateCommand_CustomerNumber) isGetCustomerStateCommand_Customer() {}

func (*GetCustomerStateCommand_SecondaryId) isGetCustomerStateCommand_Customer() {}

type GetCustomerStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      bool                    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Description string                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Data        *CustomerStateReplyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomerStateReply) Reset() {
	*x = GetCustomerStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerStateReply) ProtoMessage() {}

func (x *GetCustomerStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerStateReply.ProtoReflect.Descriptor instead.
func (*GetCustomerStateReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{5}
}

func (x *GetCustomerStateReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetCustomerStateReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetCustomerStateReply) GetData() *CustomerStateReplyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CustomerStateReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     string          `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	NuclearState   *NuclearState   `protobuf:"bytes,2,opt,name=nuclear_state,json=nuclearState,proto3" json:"nuclear_state,omitempty"`
	MessagingState *MessagingState `protobuf:"bytes,3,opt,name=messaging_state,json=messagingState,proto3" json:"messaging_state,omitempty"`
	UssdState      *UssdState      `protobuf:"bytes,4,opt,name=ussd_state,json=ussdState,proto3" json:"ussd_state,omitempty"`
	VoiceState     *VoiceState     `protobuf:"bytes,5,opt,name=voice_state,json=voiceState,proto3" json:"voice_state,omitempty"`
	PaymentState   *PaymentState   `protobuf:"bytes,6,opt,name=payment_state,json=paymentState,proto3" json:"payment_state,omitempty"`
}

func (x *CustomerStateReplyData) Reset() {
	*x = CustomerStateReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerStateReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerStateReplyData) ProtoMessage() {}

func (x *CustomerStateReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerStateReplyData.ProtoReflect.Descriptor instead.
func (*CustomerStateReplyData) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{6}
}

func (x *CustomerStateReplyData) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CustomerStateReplyData) GetNuclearState() *NuclearState {
	if x != nil {
		return x.NuclearState
	}
	return nil
}

func (x *CustomerStateReplyData) GetMessagingState() *MessagingState {
	if x != nil {
		return x.MessagingState
	}
	return nil
}

func (x *CustomerStateReplyData) GetUssdState() *UssdState {
	if x != nil {
		return x.UssdState
	}
	return nil
}

func (x *CustomerStateReplyData) GetVoiceState() *VoiceState {
	if x != nil {
		return x.VoiceState
	}
	return nil
}

func (x *CustomerStateReplyData) GetPaymentState() *PaymentState {
	if x != nil {
		return x.PaymentState
	}
	return nil
}

type AdoptCustomerStateCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Types that are assignable to OtherCustomer:
	//	*AdoptCustomerStateCommand_OtherCustomerId
	//	*AdoptCustomerStateCommand_OtherCustomerNumber
	//	*AdoptCustomerStateCommand_OtherSecondaryId
	OtherCustomer isAdoptCustomerStateCommand_OtherCustomer `protobuf_oneof:"other_customer"`
}

func (x *AdoptCustomerStateCommand) Reset() {
	*x = AdoptCustomerStateCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdoptCustomerStateCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdoptCustomerStateCommand) ProtoMessage() {}

func (x *AdoptCustomerStateCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdoptCustomerStateCommand.ProtoReflect.Descriptor instead.
func (*AdoptCustomerStateCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{7}
}

func (x *AdoptCustomerStateCommand) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (m *AdoptCustomerStateCommand) GetOtherCustomer() isAdoptCustomerStateCommand_OtherCustomer {
	if m != nil {
		return m.OtherCustomer
	}
	return nil
}

func (x *AdoptCustomerStateCommand) GetOtherCustomerId() string {
	if x, ok := x.GetOtherCustomer().(*AdoptCustomerStateCommand_OtherCustomerId); ok {
		return x.OtherCustomerId
	}
	return ""
}

func (x *AdoptCustomerStateCommand) GetOtherCustomerNumber() *CustomerNumber {
	if x, ok := x.GetOtherCustomer().(*AdoptCustomerStateCommand_OtherCustomerNumber); ok {
		return x.OtherCustomerNumber
	}
	return nil
}

func (x *AdoptCustomerStateCommand) GetOtherSecondaryId() *IndexMapping {
	if x, ok := x.GetOtherCustomer().(*AdoptCustomerStateCommand_OtherSecondaryId); ok {
		return x.OtherSecondaryId
	}
	return nil
}

type isAdoptCustomerStateCommand_OtherCustomer interface {
	isAdoptCustomerStateCommand_OtherCustomer()
}

type AdoptCustomerStateCommand_OtherCustomerId struct {
	OtherCustomerId string `protobuf:"bytes,2,opt,name=other_customer_id,json=otherCustomerId,proto3,oneof"`
}

type AdoptCustomerStateCommand_OtherCustomerNumber struct {
	OtherCustomerNumber *CustomerNumber `protobuf:"bytes,3,opt,name=other_customer_number,json=otherCustomerNumber,proto3,oneof"`
}

type AdoptCustomerStateCommand_OtherSecondaryId struct {
	OtherSecondaryId *IndexMapping `protobuf:"bytes,4,opt,name=other_secondary_id,json=otherSecondaryId,proto3,oneof"`
}

func (*AdoptCustomerStateCommand_OtherCustomerId) isAdoptCustomerStateCommand_OtherCustomer() {}

func (*AdoptCustomerStateCommand_OtherCustomerNumber) isAdoptCustomerStateCommand_OtherCustomer() {}

func (*AdoptCustomerStateCommand_OtherSecondaryId) isAdoptCustomerStateCommand_OtherCustomer() {}

type AddCustomerReminderCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*AddCustomerReminderCommand_CustomerId
	//	*AddCustomerReminderCommand_CustomerNumber
	//	*AddCustomerReminderCommand_SecondaryId
	Customer isAddCustomerReminderCommand_Customer `protobuf_oneof:"customer"`
	Reminder *CustomerReminder                     `protobuf:"bytes,4,opt,name=reminder,proto3" json:"reminder,omitempty"`
}

func (x *AddCustomerReminderCommand) Reset() {
	*x = AddCustomerReminderCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomerReminderCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomerReminderCommand) ProtoMessage() {}

func (x *AddCustomerReminderCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomerReminderCommand.ProtoReflect.Descriptor instead.
func (*AddCustomerReminderCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{8}
}

func (m *AddCustomerReminderCommand) GetCustomer() isAddCustomerReminderCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *AddCustomerReminderCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*AddCustomerReminderCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *AddCustomerReminderCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*AddCustomerReminderCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *AddCustomerReminderCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*AddCustomerReminderCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

func (x *AddCustomerReminderCommand) GetReminder() *CustomerReminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

type isAddCustomerReminderCommand_Customer interface {
	isAddCustomerReminderCommand_Customer()
}

type AddCustomerReminderCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type AddCustomerReminderCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type AddCustomerReminderCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*AddCustomerReminderCommand_CustomerId) isAddCustomerReminderCommand_Customer() {}

func (*AddCustomerReminderCommand_CustomerNumber) isAddCustomerReminderCommand_Customer() {}

func (*AddCustomerReminderCommand_SecondaryId) isAddCustomerReminderCommand_Customer() {}

type AddCustomerReminderTagCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag      *IndexMapping     `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Reminder *CustomerReminder `protobuf:"bytes,2,opt,name=reminder,proto3" json:"reminder,omitempty"`
}

func (x *AddCustomerReminderTagCommand) Reset() {
	*x = AddCustomerReminderTagCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCustomerReminderTagCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCustomerReminderTagCommand) ProtoMessage() {}

func (x *AddCustomerReminderTagCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCustomerReminderTagCommand.ProtoReflect.Descriptor instead.
func (*AddCustomerReminderTagCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{9}
}

func (x *AddCustomerReminderTagCommand) GetTag() *IndexMapping {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *AddCustomerReminderTagCommand) GetReminder() *CustomerReminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

type CancelCustomerReminderCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*CancelCustomerReminderCommand_CustomerId
	//	*CancelCustomerReminderCommand_CustomerNumber
	//	*CancelCustomerReminderCommand_SecondaryId
	Customer isCancelCustomerReminderCommand_Customer `protobuf_oneof:"customer"`
	Key      string                                   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CancelCustomerReminderCommand) Reset() {
	*x = CancelCustomerReminderCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCustomerReminderCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCustomerReminderCommand) ProtoMessage() {}

func (x *CancelCustomerReminderCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCustomerReminderCommand.ProtoReflect.Descriptor instead.
func (*CancelCustomerReminderCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{10}
}

func (m *CancelCustomerReminderCommand) GetCustomer() isCancelCustomerReminderCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *CancelCustomerReminderCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*CancelCustomerReminderCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *CancelCustomerReminderCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*CancelCustomerReminderCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *CancelCustomerReminderCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*CancelCustomerReminderCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

func (x *CancelCustomerReminderCommand) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type isCancelCustomerReminderCommand_Customer interface {
	isCancelCustomerReminderCommand_Customer()
}

type CancelCustomerReminderCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type CancelCustomerReminderCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type CancelCustomerReminderCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*CancelCustomerReminderCommand_CustomerId) isCancelCustomerReminderCommand_Customer() {}

func (*CancelCustomerReminderCommand_CustomerNumber) isCancelCustomerReminderCommand_Customer() {}

func (*CancelCustomerReminderCommand_SecondaryId) isCancelCustomerReminderCommand_Customer() {}

type CancelCustomerReminderTagCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *IndexMapping `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Key string        `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CancelCustomerReminderTagCommand) Reset() {
	*x = CancelCustomerReminderTagCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCustomerReminderTagCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCustomerReminderTagCommand) ProtoMessage() {}

func (x *CancelCustomerReminderTagCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCustomerReminderTagCommand.ProtoReflect.Descriptor instead.
func (*CancelCustomerReminderTagCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{11}
}

func (x *CancelCustomerReminderTagCommand) GetTag() *IndexMapping {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *CancelCustomerReminderTagCommand) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type UpdateCustomerTagCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*UpdateCustomerTagCommand_CustomerId
	//	*UpdateCustomerTagCommand_CustomerNumber
	//	*UpdateCustomerTagCommand_SecondaryId
	Customer isUpdateCustomerTagCommand_Customer `protobuf_oneof:"customer"`
	Tags     []*CustomerIndex                    `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *UpdateCustomerTagCommand) Reset() {
	*x = UpdateCustomerTagCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerTagCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerTagCommand) ProtoMessage() {}

func (x *UpdateCustomerTagCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerTagCommand.ProtoReflect.Descriptor instead.
func (*UpdateCustomerTagCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{12}
}

func (m *UpdateCustomerTagCommand) GetCustomer() isUpdateCustomerTagCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *UpdateCustomerTagCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*UpdateCustomerTagCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *UpdateCustomerTagCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*UpdateCustomerTagCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *UpdateCustomerTagCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*UpdateCustomerTagCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

func (x *UpdateCustomerTagCommand) GetTags() []*CustomerIndex {
	if x != nil {
		return x.Tags
	}
	return nil
}

type isUpdateCustomerTagCommand_Customer interface {
	isUpdateCustomerTagCommand_Customer()
}

type UpdateCustomerTagCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type UpdateCustomerTagCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type UpdateCustomerTagCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*UpdateCustomerTagCommand_CustomerId) isUpdateCustomerTagCommand_Customer() {}

func (*UpdateCustomerTagCommand_CustomerNumber) isUpdateCustomerTagCommand_Customer() {}

func (*UpdateCustomerTagCommand_SecondaryId) isUpdateCustomerTagCommand_Customer() {}

type DeleteCustomerTagCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*DeleteCustomerTagCommand_CustomerId
	//	*DeleteCustomerTagCommand_CustomerNumber
	//	*DeleteCustomerTagCommand_SecondaryId
	Customer isDeleteCustomerTagCommand_Customer `protobuf_oneof:"customer"`
	Keys     []string                            `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *DeleteCustomerTagCommand) Reset() {
	*x = DeleteCustomerTagCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomerTagCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomerTagCommand) ProtoMessage() {}

func (x *DeleteCustomerTagCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomerTagCommand.ProtoReflect.Descriptor instead.
func (*DeleteCustomerTagCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{13}
}

func (m *DeleteCustomerTagCommand) GetCustomer() isDeleteCustomerTagCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *DeleteCustomerTagCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*DeleteCustomerTagCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *DeleteCustomerTagCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*DeleteCustomerTagCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *DeleteCustomerTagCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*DeleteCustomerTagCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

func (x *DeleteCustomerTagCommand) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type isDeleteCustomerTagCommand_Customer interface {
	isDeleteCustomerTagCommand_Customer()
}

type DeleteCustomerTagCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type DeleteCustomerTagCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type DeleteCustomerTagCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*DeleteCustomerTagCommand_CustomerId) isDeleteCustomerTagCommand_Customer() {}

func (*DeleteCustomerTagCommand_CustomerNumber) isDeleteCustomerTagCommand_Customer() {}

func (*DeleteCustomerTagCommand_SecondaryId) isDeleteCustomerTagCommand_Customer() {}

type UpdateCustomerSecondaryIdCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*UpdateCustomerSecondaryIdCommand_CustomerId
	//	*UpdateCustomerSecondaryIdCommand_CustomerNumber
	//	*UpdateCustomerSecondaryIdCommand_SecondaryId
	Customer     isUpdateCustomerSecondaryIdCommand_Customer `protobuf_oneof:"customer"`
	SecondaryIds []*CustomerIndex                            `protobuf:"bytes,4,rep,name=secondary_ids,json=secondaryIds,proto3" json:"secondary_ids,omitempty"`
}

func (x *UpdateCustomerSecondaryIdCommand) Reset() {
	*x = UpdateCustomerSecondaryIdCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerSecondaryIdCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerSecondaryIdCommand) ProtoMessage() {}

func (x *UpdateCustomerSecondaryIdCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerSecondaryIdCommand.ProtoReflect.Descriptor instead.
func (*UpdateCustomerSecondaryIdCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{14}
}

func (m *UpdateCustomerSecondaryIdCommand) GetCustomer() isUpdateCustomerSecondaryIdCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *UpdateCustomerSecondaryIdCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*UpdateCustomerSecondaryIdCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *UpdateCustomerSecondaryIdCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*UpdateCustomerSecondaryIdCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *UpdateCustomerSecondaryIdCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*UpdateCustomerSecondaryIdCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

func (x *UpdateCustomerSecondaryIdCommand) GetSecondaryIds() []*CustomerIndex {
	if x != nil {
		return x.SecondaryIds
	}
	return nil
}

type isUpdateCustomerSecondaryIdCommand_Customer interface {
	isUpdateCustomerSecondaryIdCommand_Customer()
}

type UpdateCustomerSecondaryIdCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type UpdateCustomerSecondaryIdCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type UpdateCustomerSecondaryIdCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*UpdateCustomerSecondaryIdCommand_CustomerId) isUpdateCustomerSecondaryIdCommand_Customer() {}

func (*UpdateCustomerSecondaryIdCommand_CustomerNumber) isUpdateCustomerSecondaryIdCommand_Customer() {
}

func (*UpdateCustomerSecondaryIdCommand_SecondaryId) isUpdateCustomerSecondaryIdCommand_Customer() {}

type DeleteCustomerSecondaryIdCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*DeleteCustomerSecondaryIdCommand_CustomerId
	//	*DeleteCustomerSecondaryIdCommand_CustomerNumber
	//	*DeleteCustomerSecondaryIdCommand_SecondaryId
	Customer isDeleteCustomerSecondaryIdCommand_Customer `protobuf_oneof:"customer"`
	Mappings []*IndexMapping                             `protobuf:"bytes,4,rep,name=mappings,proto3" json:"mappings,omitempty"`
}

func (x *DeleteCustomerSecondaryIdCommand) Reset() {
	*x = DeleteCustomerSecondaryIdCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomerSecondaryIdCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomerSecondaryIdCommand) ProtoMessage() {}

func (x *DeleteCustomerSecondaryIdCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomerSecondaryIdCommand.ProtoReflect.Descriptor instead.
func (*DeleteCustomerSecondaryIdCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{15}
}

func (m *DeleteCustomerSecondaryIdCommand) GetCustomer() isDeleteCustomerSecondaryIdCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *DeleteCustomerSecondaryIdCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*DeleteCustomerSecondaryIdCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *DeleteCustomerSecondaryIdCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*DeleteCustomerSecondaryIdCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *DeleteCustomerSecondaryIdCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*DeleteCustomerSecondaryIdCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

func (x *DeleteCustomerSecondaryIdCommand) GetMappings() []*IndexMapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

type isDeleteCustomerSecondaryIdCommand_Customer interface {
	isDeleteCustomerSecondaryIdCommand_Customer()
}

type DeleteCustomerSecondaryIdCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type DeleteCustomerSecondaryIdCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type DeleteCustomerSecondaryIdCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*DeleteCustomerSecondaryIdCommand_CustomerId) isDeleteCustomerSecondaryIdCommand_Customer() {}

func (*DeleteCustomerSecondaryIdCommand_CustomerNumber) isDeleteCustomerSecondaryIdCommand_Customer() {
}

func (*DeleteCustomerSecondaryIdCommand_SecondaryId) isDeleteCustomerSecondaryIdCommand_Customer() {}

type LeaseCustomerMetadataCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*LeaseCustomerMetadataCommand_CustomerId
	//	*LeaseCustomerMetadataCommand_CustomerNumber
	//	*LeaseCustomerMetadataCommand_SecondaryId
	Customer isLeaseCustomerMetadataCommand_Customer `protobuf_oneof:"customer"`
	Key      string                                  `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LeaseCustomerMetadataCommand) Reset() {
	*x = LeaseCustomerMetadataCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseCustomerMetadataCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseCustomerMetadataCommand) ProtoMessage() {}

func (x *LeaseCustomerMetadataCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseCustomerMetadataCommand.ProtoReflect.Descriptor instead.
func (*LeaseCustomerMetadataCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{16}
}

func (m *LeaseCustomerMetadataCommand) GetCustomer() isLeaseCustomerMetadataCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *LeaseCustomerMetadataCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*LeaseCustomerMetadataCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *LeaseCustomerMetadataCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*LeaseCustomerMetadataCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *LeaseCustomerMetadataCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*LeaseCustomerMetadataCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

func (x *LeaseCustomerMetadataCommand) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type isLeaseCustomerMetadataCommand_Customer interface {
	isLeaseCustomerMetadataCommand_Customer()
}

type LeaseCustomerMetadataCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type LeaseCustomerMetadataCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type LeaseCustomerMetadataCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*LeaseCustomerMetadataCommand_CustomerId) isLeaseCustomerMetadataCommand_Customer() {}

func (*LeaseCustomerMetadataCommand_CustomerNumber) isLeaseCustomerMetadataCommand_Customer() {}

func (*LeaseCustomerMetadataCommand_SecondaryId) isLeaseCustomerMetadataCommand_Customer() {}

type LeaseCustomerMetadataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      bool                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CustomerId  *wrappers.StringValue `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Value       *DataMapValue         `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LeaseCustomerMetadataReply) Reset() {
	*x = LeaseCustomerMetadataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseCustomerMetadataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseCustomerMetadataReply) ProtoMessage() {}

func (x *LeaseCustomerMetadataReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseCustomerMetadataReply.ProtoReflect.Descriptor instead.
func (*LeaseCustomerMetadataReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{17}
}

func (x *LeaseCustomerMetadataReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *LeaseCustomerMetadataReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LeaseCustomerMetadataReply) GetCustomerId() *wrappers.StringValue {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

func (x *LeaseCustomerMetadataReply) GetValue() *DataMapValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type UpdateCustomerMetadataCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*UpdateCustomerMetadataCommand_CustomerId
	//	*UpdateCustomerMetadataCommand_CustomerNumber
	//	*UpdateCustomerMetadataCommand_SecondaryId
	Customer isUpdateCustomerMetadataCommand_Customer `protobuf_oneof:"customer"`
	Metadata map[string]*DataMapValue                 `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateCustomerMetadataCommand) Reset() {
	*x = UpdateCustomerMetadataCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerMetadataCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerMetadataCommand) ProtoMessage() {}

func (x *UpdateCustomerMetadataCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerMetadataCommand.ProtoReflect.Descriptor instead.
func (*UpdateCustomerMetadataCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{18}
}

func (m *UpdateCustomerMetadataCommand) GetCustomer() isUpdateCustomerMetadataCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *UpdateCustomerMetadataCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*UpdateCustomerMetadataCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *UpdateCustomerMetadataCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*UpdateCustomerMetadataCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *UpdateCustomerMetadataCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*UpdateCustomerMetadataCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

func (x *UpdateCustomerMetadataCommand) GetMetadata() map[string]*DataMapValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isUpdateCustomerMetadataCommand_Customer interface {
	isUpdateCustomerMetadataCommand_Customer()
}

type UpdateCustomerMetadataCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type UpdateCustomerMetadataCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type UpdateCustomerMetadataCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*UpdateCustomerMetadataCommand_CustomerId) isUpdateCustomerMetadataCommand_Customer() {}

func (*UpdateCustomerMetadataCommand_CustomerNumber) isUpdateCustomerMetadataCommand_Customer() {}

func (*UpdateCustomerMetadataCommand_SecondaryId) isUpdateCustomerMetadataCommand_Customer() {}

type DeleteCustomerMetadataCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Customer:
	//	*DeleteCustomerMetadataCommand_CustomerId
	//	*DeleteCustomerMetadataCommand_CustomerNumber
	//	*DeleteCustomerMetadataCommand_SecondaryId
	Customer isDeleteCustomerMetadataCommand_Customer `protobuf_oneof:"customer"`
	Keys     []string                                 `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *DeleteCustomerMetadataCommand) Reset() {
	*x = DeleteCustomerMetadataCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomerMetadataCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomerMetadataCommand) ProtoMessage() {}

func (x *DeleteCustomerMetadataCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomerMetadataCommand.ProtoReflect.Descriptor instead.
func (*DeleteCustomerMetadataCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{19}
}

func (m *DeleteCustomerMetadataCommand) GetCustomer() isDeleteCustomerMetadataCommand_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (x *DeleteCustomerMetadataCommand) GetCustomerId() string {
	if x, ok := x.GetCustomer().(*DeleteCustomerMetadataCommand_CustomerId); ok {
		return x.CustomerId
	}
	return ""
}

func (x *DeleteCustomerMetadataCommand) GetCustomerNumber() *CustomerNumber {
	if x, ok := x.GetCustomer().(*DeleteCustomerMetadataCommand_CustomerNumber); ok {
		return x.CustomerNumber
	}
	return nil
}

func (x *DeleteCustomerMetadataCommand) GetSecondaryId() *IndexMapping {
	if x, ok := x.GetCustomer().(*DeleteCustomerMetadataCommand_SecondaryId); ok {
		return x.SecondaryId
	}
	return nil
}

func (x *DeleteCustomerMetadataCommand) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type isDeleteCustomerMetadataCommand_Customer interface {
	isDeleteCustomerMetadataCommand_Customer()
}

type DeleteCustomerMetadataCommand_CustomerId struct {
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof"`
}

type DeleteCustomerMetadataCommand_CustomerNumber struct {
	CustomerNumber *CustomerNumber `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3,oneof"`
}

type DeleteCustomerMetadataCommand_SecondaryId struct {
	SecondaryId *IndexMapping `protobuf:"bytes,3,opt,name=secondary_id,json=secondaryId,proto3,oneof"`
}

func (*DeleteCustomerMetadataCommand_CustomerId) isDeleteCustomerMetadataCommand_Customer() {}

func (*DeleteCustomerMetadataCommand_CustomerNumber) isDeleteCustomerMetadataCommand_Customer() {}

func (*DeleteCustomerMetadataCommand_SecondaryId) isDeleteCustomerMetadataCommand_Customer() {}

type SendMessageCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerNumber *CustomerNumber         `protobuf:"bytes,1,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *MessagingChannelNumber `protobuf:"bytes,2,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Body           *CustomerMessageBody    `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SendMessageCommand) Reset() {
	*x = SendMessageCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageCommand) ProtoMessage() {}

func (x *SendMessageCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageCommand.ProtoReflect.Descriptor instead.
func (*SendMessageCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{20}
}

func (x *SendMessageCommand) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *SendMessageCommand) GetChannelNumber() *MessagingChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *SendMessageCommand) GetBody() *CustomerMessageBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type SendMessageTagCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag           *IndexMapping           `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	ChannelNumber *MessagingChannelNumber `protobuf:"bytes,2,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Body          *CustomerMessageBody    `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SendMessageTagCommand) Reset() {
	*x = SendMessageTagCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageTagCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageTagCommand) ProtoMessage() {}

func (x *SendMessageTagCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageTagCommand.ProtoReflect.Descriptor instead.
func (*SendMessageTagCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{21}
}

func (x *SendMessageTagCommand) GetTag() *IndexMapping {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *SendMessageTagCommand) GetChannelNumber() *MessagingChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *SendMessageTagCommand) GetBody() *CustomerMessageBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type ReplyToMessageCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId       string               `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	ReplyToMessageId string               `protobuf:"bytes,2,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"`
	Body             *CustomerMessageBody `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ReplyToMessageCommand) Reset() {
	*x = ReplyToMessageCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyToMessageCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyToMessageCommand) ProtoMessage() {}

func (x *ReplyToMessageCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyToMessageCommand.ProtoReflect.Descriptor instead.
func (*ReplyToMessageCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{22}
}

func (x *ReplyToMessageCommand) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ReplyToMessageCommand) GetReplyToMessageId() string {
	if x != nil {
		return x.ReplyToMessageId
	}
	return ""
}

func (x *ReplyToMessageCommand) GetBody() *CustomerMessageBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type SendMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      MessageDeliveryStatus `protobuf:"varint,1,opt,name=status,proto3,enum=com.elarian.hera.proto.MessageDeliveryStatus" json:"status,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	MessageId   *wrappers.StringValue `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	CustomerId  *wrappers.StringValue `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *SendMessageReply) Reset() {
	*x = SendMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReply) ProtoMessage() {}

func (x *SendMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReply.ProtoReflect.Descriptor instead.
func (*SendMessageReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{23}
}

func (x *SendMessageReply) GetStatus() MessageDeliveryStatus {
	if x != nil {
		return x.Status
	}
	return MessageDeliveryStatus_MESSAGE_DELIVERY_STATUS_UNSEPCIFIED
}

func (x *SendMessageReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SendMessageReply) GetMessageId() *wrappers.StringValue {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *SendMessageReply) GetCustomerId() *wrappers.StringValue {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

type MessagingConsentCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerNumber *CustomerNumber         `protobuf:"bytes,1,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *MessagingChannelNumber `protobuf:"bytes,2,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Action         MessagingConsentAction  `protobuf:"varint,3,opt,name=action,proto3,enum=com.elarian.hera.proto.MessagingConsentAction" json:"action,omitempty"`
}

func (x *MessagingConsentCommand) Reset() {
	*x = MessagingConsentCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingConsentCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingConsentCommand) ProtoMessage() {}

func (x *MessagingConsentCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingConsentCommand.ProtoReflect.Descriptor instead.
func (*MessagingConsentCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{24}
}

func (x *MessagingConsentCommand) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *MessagingConsentCommand) GetChannelNumber() *MessagingChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *MessagingConsentCommand) GetAction() MessagingConsentAction {
	if x != nil {
		return x.Action
	}
	return MessagingConsentAction_MESSAGING_CONSENT_ACTION_UNSPECIFIED
}

type MessagingConsentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      MessagingConsentStatus `protobuf:"varint,1,opt,name=status,proto3,enum=com.elarian.hera.proto.MessagingConsentStatus" json:"status,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CustomerId  *wrappers.StringValue  `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *MessagingConsentReply) Reset() {
	*x = MessagingConsentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingConsentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingConsentReply) ProtoMessage() {}

func (x *MessagingConsentReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingConsentReply.ProtoReflect.Descriptor instead.
func (*MessagingConsentReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{25}
}

func (x *MessagingConsentReply) GetStatus() MessagingConsentStatus {
	if x != nil {
		return x.Status
	}
	return MessagingConsentStatus_MESSAGING_CONSENT_STATUS_UNSPECIFIED
}

func (x *MessagingConsentReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MessagingConsentReply) GetCustomerId() *wrappers.StringValue {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

type InitiatePaymentCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DebitParty  *PaymentCounterParty `protobuf:"bytes,1,opt,name=debit_party,json=debitParty,proto3" json:"debit_party,omitempty"`
	CreditParty *PaymentCounterParty `protobuf:"bytes,2,opt,name=credit_party,json=creditParty,proto3" json:"credit_party,omitempty"`
	Value       *Cash                `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InitiatePaymentCommand) Reset() {
	*x = InitiatePaymentCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiatePaymentCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiatePaymentCommand) ProtoMessage() {}

func (x *InitiatePaymentCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiatePaymentCommand.ProtoReflect.Descriptor instead.
func (*InitiatePaymentCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{26}
}

func (x *InitiatePaymentCommand) GetDebitParty() *PaymentCounterParty {
	if x != nil {
		return x.DebitParty
	}
	return nil
}

func (x *InitiatePaymentCommand) GetCreditParty() *PaymentCounterParty {
	if x != nil {
		return x.CreditParty
	}
	return nil
}

func (x *InitiatePaymentCommand) GetValue() *Cash {
	if x != nil {
		return x.Value
	}
	return nil
}

type InitiatePaymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           PaymentStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=com.elarian.hera.proto.PaymentStatus" json:"status,omitempty"`
	Description      string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	TransactionId    *wrappers.StringValue `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	DebitCustomerId  *wrappers.StringValue `protobuf:"bytes,4,opt,name=debit_customer_id,json=debitCustomerId,proto3" json:"debit_customer_id,omitempty"`
	CreditCustomerId *wrappers.StringValue `protobuf:"bytes,5,opt,name=credit_customer_id,json=creditCustomerId,proto3" json:"credit_customer_id,omitempty"`
}

func (x *InitiatePaymentReply) Reset() {
	*x = InitiatePaymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiatePaymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiatePaymentReply) ProtoMessage() {}

func (x *InitiatePaymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiatePaymentReply.ProtoReflect.Descriptor instead.
func (*InitiatePaymentReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{27}
}

func (x *InitiatePaymentReply) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

func (x *InitiatePaymentReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InitiatePaymentReply) GetTransactionId() *wrappers.StringValue {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *InitiatePaymentReply) GetDebitCustomerId() *wrappers.StringValue {
	if x != nil {
		return x.DebitCustomerId
	}
	return nil
}

func (x *InitiatePaymentReply) GetCreditCustomerId() *wrappers.StringValue {
	if x != nil {
		return x.CreditCustomerId
	}
	return nil
}

type MakeVoiceCallCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerNumber *CustomerNumber     `protobuf:"bytes,1,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *VoiceChannelNumber `protobuf:"bytes,2,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
}

func (x *MakeVoiceCallCommand) Reset() {
	*x = MakeVoiceCallCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeVoiceCallCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeVoiceCallCommand) ProtoMessage() {}

func (x *MakeVoiceCallCommand) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeVoiceCallCommand.ProtoReflect.Descriptor instead.
func (*MakeVoiceCallCommand) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{28}
}

func (x *MakeVoiceCallCommand) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *MakeVoiceCallCommand) GetChannelNumber() *VoiceChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

type MakeVoiceCallReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      VoiceCallStatus       `protobuf:"varint,1,opt,name=status,proto3,enum=com.elarian.hera.proto.VoiceCallStatus" json:"status,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	SessionId   *wrappers.StringValue `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CustomerId  *wrappers.StringValue `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *MakeVoiceCallReply) Reset() {
	*x = MakeVoiceCallReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeVoiceCallReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeVoiceCallReply) ProtoMessage() {}

func (x *MakeVoiceCallReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeVoiceCallReply.ProtoReflect.Descriptor instead.
func (*MakeVoiceCallReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{29}
}

func (x *MakeVoiceCallReply) GetStatus() VoiceCallStatus {
	if x != nil {
		return x.Status
	}
	return VoiceCallStatus_VOICE_CALL_STATUS_UNSPECIFIED
}

func (x *MakeVoiceCallReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MakeVoiceCallReply) GetSessionId() *wrappers.StringValue {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *MakeVoiceCallReply) GetCustomerId() *wrappers.StringValue {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

type UpdateCustomerStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      bool                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CustomerId  *wrappers.StringValue `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *UpdateCustomerStateReply) Reset() {
	*x = UpdateCustomerStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerStateReply) ProtoMessage() {}

func (x *UpdateCustomerStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerStateReply.ProtoReflect.Descriptor instead.
func (*UpdateCustomerStateReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateCustomerStateReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateCustomerStateReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateCustomerStateReply) GetCustomerId() *wrappers.StringValue {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

type TagCommandReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      bool                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	WorkId      *wrappers.StringValue `protobuf:"bytes,3,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty"`
}

func (x *TagCommandReply) Reset() {
	*x = TagCommandReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagCommandReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagCommandReply) ProtoMessage() {}

func (x *TagCommandReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagCommandReply.ProtoReflect.Descriptor instead.
func (*TagCommandReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{31}
}

func (x *TagCommandReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *TagCommandReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TagCommandReply) GetWorkId() *wrappers.StringValue {
	if x != nil {
		return x.WorkId
	}
	return nil
}

type ServerToAppNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string               `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	AppId     string               `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Types that are assignable to Entry:
	//	*ServerToAppNotification_Reminder
	//	*ServerToAppNotification_MessagingConsentStatus
	//	*ServerToAppNotification_MessagingSessionStatus
	//	*ServerToAppNotification_ReceivedMessage
	//	*ServerToAppNotification_MessageStatus
	//	*ServerToAppNotification_UssdSession
	//	*ServerToAppNotification_VoiceCall
	//	*ServerToAppNotification_ReceivedPayment
	//	*ServerToAppNotification_PaymentStatus
	//	*ServerToAppNotification_WalletPaymentStatus
	Entry isServerToAppNotification_Entry `protobuf_oneof:"entry"`
}

func (x *ServerToAppNotification) Reset() {
	*x = ServerToAppNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToAppNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToAppNotification) ProtoMessage() {}

func (x *ServerToAppNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToAppNotification.ProtoReflect.Descriptor instead.
func (*ServerToAppNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{32}
}

func (x *ServerToAppNotification) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ServerToAppNotification) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ServerToAppNotification) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (m *ServerToAppNotification) GetEntry() isServerToAppNotification_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *ServerToAppNotification) GetReminder() *ReminderNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_Reminder); ok {
		return x.Reminder
	}
	return nil
}

func (x *ServerToAppNotification) GetMessagingConsentStatus() *MessagingConsentStatusNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_MessagingConsentStatus); ok {
		return x.MessagingConsentStatus
	}
	return nil
}

func (x *ServerToAppNotification) GetMessagingSessionStatus() *MessagingSessionStatusNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_MessagingSessionStatus); ok {
		return x.MessagingSessionStatus
	}
	return nil
}

func (x *ServerToAppNotification) GetReceivedMessage() *ReceivedMessageNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_ReceivedMessage); ok {
		return x.ReceivedMessage
	}
	return nil
}

func (x *ServerToAppNotification) GetMessageStatus() *MessageStatusNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_MessageStatus); ok {
		return x.MessageStatus
	}
	return nil
}

func (x *ServerToAppNotification) GetUssdSession() *UssdSessionNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_UssdSession); ok {
		return x.UssdSession
	}
	return nil
}

func (x *ServerToAppNotification) GetVoiceCall() *VoiceCallNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_VoiceCall); ok {
		return x.VoiceCall
	}
	return nil
}

func (x *ServerToAppNotification) GetReceivedPayment() *ReceivedPaymentNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_ReceivedPayment); ok {
		return x.ReceivedPayment
	}
	return nil
}

func (x *ServerToAppNotification) GetPaymentStatus() *PaymentStatusNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_PaymentStatus); ok {
		return x.PaymentStatus
	}
	return nil
}

func (x *ServerToAppNotification) GetWalletPaymentStatus() *WalletPaymentStatusNotification {
	if x, ok := x.GetEntry().(*ServerToAppNotification_WalletPaymentStatus); ok {
		return x.WalletPaymentStatus
	}
	return nil
}

type isServerToAppNotification_Entry interface {
	isServerToAppNotification_Entry()
}

type ServerToAppNotification_Reminder struct {
	Reminder *ReminderNotification `protobuf:"bytes,4,opt,name=reminder,proto3,oneof"`
}

type ServerToAppNotification_MessagingConsentStatus struct {
	MessagingConsentStatus *MessagingConsentStatusNotification `protobuf:"bytes,5,opt,name=messaging_consent_status,json=messagingConsentStatus,proto3,oneof"`
}

type ServerToAppNotification_MessagingSessionStatus struct {
	MessagingSessionStatus *MessagingSessionStatusNotification `protobuf:"bytes,6,opt,name=messaging_session_status,json=messagingSessionStatus,proto3,oneof"`
}

type ServerToAppNotification_ReceivedMessage struct {
	ReceivedMessage *ReceivedMessageNotification `protobuf:"bytes,7,opt,name=received_message,json=receivedMessage,proto3,oneof"`
}

type ServerToAppNotification_MessageStatus struct {
	MessageStatus *MessageStatusNotification `protobuf:"bytes,8,opt,name=message_status,json=messageStatus,proto3,oneof"`
}

type ServerToAppNotification_UssdSession struct {
	UssdSession *UssdSessionNotification `protobuf:"bytes,9,opt,name=ussd_session,json=ussdSession,proto3,oneof"`
}

type ServerToAppNotification_VoiceCall struct {
	VoiceCall *VoiceCallNotification `protobuf:"bytes,10,opt,name=voice_call,json=voiceCall,proto3,oneof"`
}

type ServerToAppNotification_ReceivedPayment struct {
	ReceivedPayment *ReceivedPaymentNotification `protobuf:"bytes,11,opt,name=received_payment,json=receivedPayment,proto3,oneof"`
}

type ServerToAppNotification_PaymentStatus struct {
	PaymentStatus *PaymentStatusNotification `protobuf:"bytes,12,opt,name=payment_status,json=paymentStatus,proto3,oneof"`
}

type ServerToAppNotification_WalletPaymentStatus struct {
	WalletPaymentStatus *WalletPaymentStatusNotification `protobuf:"bytes,13,opt,name=wallet_payment_status,json=walletPaymentStatus,proto3,oneof"`
}

func (*ServerToAppNotification_Reminder) isServerToAppNotification_Entry() {}

func (*ServerToAppNotification_MessagingConsentStatus) isServerToAppNotification_Entry() {}

func (*ServerToAppNotification_MessagingSessionStatus) isServerToAppNotification_Entry() {}

func (*ServerToAppNotification_ReceivedMessage) isServerToAppNotification_Entry() {}

func (*ServerToAppNotification_MessageStatus) isServerToAppNotification_Entry() {}

func (*ServerToAppNotification_UssdSession) isServerToAppNotification_Entry() {}

func (*ServerToAppNotification_VoiceCall) isServerToAppNotification_Entry() {}

func (*ServerToAppNotification_ReceivedPayment) isServerToAppNotification_Entry() {}

func (*ServerToAppNotification_PaymentStatus) isServerToAppNotification_Entry() {}

func (*ServerToAppNotification_WalletPaymentStatus) isServerToAppNotification_Entry() {}

type ServerToAppNotificationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Entry:
	//	*ServerToAppNotificationReply_UssdSession
	//	*ServerToAppNotificationReply_VoiceCall
	Entry isServerToAppNotificationReply_Entry `protobuf_oneof:"entry"`
}

func (x *ServerToAppNotificationReply) Reset() {
	*x = ServerToAppNotificationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToAppNotificationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToAppNotificationReply) ProtoMessage() {}

func (x *ServerToAppNotificationReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToAppNotificationReply.ProtoReflect.Descriptor instead.
func (*ServerToAppNotificationReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{33}
}

func (m *ServerToAppNotificationReply) GetEntry() isServerToAppNotificationReply_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *ServerToAppNotificationReply) GetUssdSession() *UssdSessionNotificationReply {
	if x, ok := x.GetEntry().(*ServerToAppNotificationReply_UssdSession); ok {
		return x.UssdSession
	}
	return nil
}

func (x *ServerToAppNotificationReply) GetVoiceCall() *VoiceCallNotificationReply {
	if x, ok := x.GetEntry().(*ServerToAppNotificationReply_VoiceCall); ok {
		return x.VoiceCall
	}
	return nil
}

type isServerToAppNotificationReply_Entry interface {
	isServerToAppNotificationReply_Entry()
}

type ServerToAppNotificationReply_UssdSession struct {
	UssdSession *UssdSessionNotificationReply `protobuf:"bytes,1,opt,name=ussd_session,json=ussdSession,proto3,oneof"`
}

type ServerToAppNotificationReply_VoiceCall struct {
	VoiceCall *VoiceCallNotificationReply `protobuf:"bytes,2,opt,name=voice_call,json=voiceCall,proto3,oneof"`
}

func (*ServerToAppNotificationReply_UssdSession) isServerToAppNotificationReply_Entry() {}

func (*ServerToAppNotificationReply_VoiceCall) isServerToAppNotificationReply_Entry() {}

type MessagingConsentStatusNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     string                  `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerNumber *CustomerNumber         `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *MessagingChannelNumber `protobuf:"bytes,3,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Status         MessagingConsentStatus  `protobuf:"varint,4,opt,name=status,proto3,enum=com.elarian.hera.proto.MessagingConsentStatus" json:"status,omitempty"`
}

func (x *MessagingConsentStatusNotification) Reset() {
	*x = MessagingConsentStatusNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingConsentStatusNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingConsentStatusNotification) ProtoMessage() {}

func (x *MessagingConsentStatusNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingConsentStatusNotification.ProtoReflect.Descriptor instead.
func (*MessagingConsentStatusNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{34}
}

func (x *MessagingConsentStatusNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *MessagingConsentStatusNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *MessagingConsentStatusNotification) GetChannelNumber() *MessagingChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *MessagingConsentStatusNotification) GetStatus() MessagingConsentStatus {
	if x != nil {
		return x.Status
	}
	return MessagingConsentStatus_MESSAGING_CONSENT_STATUS_UNSPECIFIED
}

type MessagingSessionStatusNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     string                  `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerNumber *CustomerNumber         `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *MessagingChannelNumber `protobuf:"bytes,3,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Expiration     *timestamp.Timestamp    `protobuf:"bytes,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Status         MessagingSessionStatus  `protobuf:"varint,5,opt,name=status,proto3,enum=com.elarian.hera.proto.MessagingSessionStatus" json:"status,omitempty"`
}

func (x *MessagingSessionStatusNotification) Reset() {
	*x = MessagingSessionStatusNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingSessionStatusNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingSessionStatusNotification) ProtoMessage() {}

func (x *MessagingSessionStatusNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingSessionStatusNotification.ProtoReflect.Descriptor instead.
func (*MessagingSessionStatusNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{35}
}

func (x *MessagingSessionStatusNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *MessagingSessionStatusNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *MessagingSessionStatusNotification) GetChannelNumber() *MessagingChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *MessagingSessionStatusNotification) GetExpiration() *timestamp.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *MessagingSessionStatusNotification) GetStatus() MessagingSessionStatus {
	if x != nil {
		return x.Status
	}
	return MessagingSessionStatus_MESSAGING_SESSION_STATUSN_UNSPECIFIED
}

type ReminderNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string                `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Reminder   *CustomerReminder     `protobuf:"bytes,2,opt,name=reminder,proto3" json:"reminder,omitempty"`
	Tag        *CustomerIndex        `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	WorkId     *wrappers.StringValue `protobuf:"bytes,4,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty"`
}

func (x *ReminderNotification) Reset() {
	*x = ReminderNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReminderNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReminderNotification) ProtoMessage() {}

func (x *ReminderNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReminderNotification.ProtoReflect.Descriptor instead.
func (*ReminderNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{36}
}

func (x *ReminderNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ReminderNotification) GetReminder() *CustomerReminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

func (x *ReminderNotification) GetTag() *CustomerIndex {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *ReminderNotification) GetWorkId() *wrappers.StringValue {
	if x != nil {
		return x.WorkId
	}
	return nil
}

type ReceivedMessageNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     string                  `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	MessageId      string                  `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	CustomerNumber *CustomerNumber         `protobuf:"bytes,3,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *MessagingChannelNumber `protobuf:"bytes,4,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Text           *wrappers.StringValue   `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	Media          []*MediaMessageBody     `protobuf:"bytes,6,rep,name=media,proto3" json:"media,omitempty"`
	Location       *LocationMessageBody    `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *ReceivedMessageNotification) Reset() {
	*x = ReceivedMessageNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedMessageNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedMessageNotification) ProtoMessage() {}

func (x *ReceivedMessageNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedMessageNotification.ProtoReflect.Descriptor instead.
func (*ReceivedMessageNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{37}
}

func (x *ReceivedMessageNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ReceivedMessageNotification) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ReceivedMessageNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *ReceivedMessageNotification) GetChannelNumber() *MessagingChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *ReceivedMessageNotification) GetText() *wrappers.StringValue {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *ReceivedMessageNotification) GetMedia() []*MediaMessageBody {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ReceivedMessageNotification) GetLocation() *LocationMessageBody {
	if x != nil {
		return x.Location
	}
	return nil
}

type MessageStatusNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string                `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	MessageId  string                `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Status     MessageDeliveryStatus `protobuf:"varint,3,opt,name=status,proto3,enum=com.elarian.hera.proto.MessageDeliveryStatus" json:"status,omitempty"`
}

func (x *MessageStatusNotification) Reset() {
	*x = MessageStatusNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageStatusNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageStatusNotification) ProtoMessage() {}

func (x *MessageStatusNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageStatusNotification.ProtoReflect.Descriptor instead.
func (*MessageStatusNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{38}
}

func (x *MessageStatusNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *MessageStatusNotification) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageStatusNotification) GetStatus() MessageDeliveryStatus {
	if x != nil {
		return x.Status
	}
	return MessageDeliveryStatus_MESSAGE_DELIVERY_STATUS_UNSEPCIFIED
}

type UssdSessionNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     string                `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	SessionId      string                `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ChannelNumber  *UssdChannelNumber    `protobuf:"bytes,3,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	CustomerNumber *CustomerNumber       `protobuf:"bytes,4,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	Input          *wrappers.StringValue `protobuf:"bytes,5,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *UssdSessionNotification) Reset() {
	*x = UssdSessionNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UssdSessionNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UssdSessionNotification) ProtoMessage() {}

func (x *UssdSessionNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UssdSessionNotification.ProtoReflect.Descriptor instead.
func (*UssdSessionNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{39}
}

func (x *UssdSessionNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *UssdSessionNotification) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UssdSessionNotification) GetChannelNumber() *UssdChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *UssdSessionNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *UssdSessionNotification) GetInput() *wrappers.StringValue {
	if x != nil {
		return x.Input
	}
	return nil
}

type VoiceCallNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     string                 `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	SessionId      string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ChannelNumber  *VoiceChannelNumber    `protobuf:"bytes,3,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	CustomerNumber *CustomerNumber        `protobuf:"bytes,4,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	Direction      CustomerEventDirection `protobuf:"varint,5,opt,name=direction,proto3,enum=com.elarian.hera.proto.CustomerEventDirection" json:"direction,omitempty"`
	Input          *VoiceCallHopInput     `protobuf:"bytes,6,opt,name=input,proto3" json:"input,omitempty"`
	Duration       *duration.Duration     `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Cost           *Cash                  `protobuf:"bytes,8,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *VoiceCallNotification) Reset() {
	*x = VoiceCallNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceCallNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceCallNotification) ProtoMessage() {}

func (x *VoiceCallNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceCallNotification.ProtoReflect.Descriptor instead.
func (*VoiceCallNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{40}
}

func (x *VoiceCallNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *VoiceCallNotification) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *VoiceCallNotification) GetChannelNumber() *VoiceChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *VoiceCallNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *VoiceCallNotification) GetDirection() CustomerEventDirection {
	if x != nil {
		return x.Direction
	}
	return CustomerEventDirection_CUSTOMER_EVENT_DIRECTION_UNSPECIFIED
}

func (x *VoiceCallNotification) GetInput() *VoiceCallHopInput {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *VoiceCallNotification) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *VoiceCallNotification) GetCost() *Cash {
	if x != nil {
		return x.Cost
	}
	return nil
}

type ReceivedPaymentNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurseId        string                `protobuf:"bytes,1,opt,name=purse_id,json=purseId,proto3" json:"purse_id,omitempty"`
	CustomerId     string                `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	TransactionId  string                `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	CustomerNumber *CustomerNumber       `protobuf:"bytes,4,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *PaymentChannelNumber `protobuf:"bytes,5,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Value          *Cash                 `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Status         PaymentStatus         `protobuf:"varint,7,opt,name=status,proto3,enum=com.elarian.hera.proto.PaymentStatus" json:"status,omitempty"`
}

func (x *ReceivedPaymentNotification) Reset() {
	*x = ReceivedPaymentNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedPaymentNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedPaymentNotification) ProtoMessage() {}

func (x *ReceivedPaymentNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedPaymentNotification.ProtoReflect.Descriptor instead.
func (*ReceivedPaymentNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{41}
}

func (x *ReceivedPaymentNotification) GetPurseId() string {
	if x != nil {
		return x.PurseId
	}
	return ""
}

func (x *ReceivedPaymentNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ReceivedPaymentNotification) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ReceivedPaymentNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *ReceivedPaymentNotification) GetChannelNumber() *PaymentChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *ReceivedPaymentNotification) GetValue() *Cash {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ReceivedPaymentNotification) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

type PaymentStatusNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId    *wrappers.StringValue `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	TransactionId string                `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Status        PaymentStatus         `protobuf:"varint,3,opt,name=status,proto3,enum=com.elarian.hera.proto.PaymentStatus" json:"status,omitempty"`
}

func (x *PaymentStatusNotification) Reset() {
	*x = PaymentStatusNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentStatusNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentStatusNotification) ProtoMessage() {}

func (x *PaymentStatusNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentStatusNotification.ProtoReflect.Descriptor instead.
func (*PaymentStatusNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{42}
}

func (x *PaymentStatusNotification) GetCustomerId() *wrappers.StringValue {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

func (x *PaymentStatusNotification) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *PaymentStatusNotification) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

type WalletPaymentStatusNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId      string        `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	CustomerId    string        `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	TransactionId string        `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Status        PaymentStatus `protobuf:"varint,4,opt,name=status,proto3,enum=com.elarian.hera.proto.PaymentStatus" json:"status,omitempty"`
}

func (x *WalletPaymentStatusNotification) Reset() {
	*x = WalletPaymentStatusNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletPaymentStatusNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletPaymentStatusNotification) ProtoMessage() {}

func (x *WalletPaymentStatusNotification) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletPaymentStatusNotification.ProtoReflect.Descriptor instead.
func (*WalletPaymentStatusNotification) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{43}
}

func (x *WalletPaymentStatusNotification) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *WalletPaymentStatusNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *WalletPaymentStatusNotification) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WalletPaymentStatusNotification) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

type UssdSessionNotificationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu *UssdMenu `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"`
}

func (x *UssdSessionNotificationReply) Reset() {
	*x = UssdSessionNotificationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UssdSessionNotificationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UssdSessionNotificationReply) ProtoMessage() {}

func (x *UssdSessionNotificationReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UssdSessionNotificationReply.ProtoReflect.Descriptor instead.
func (*UssdSessionNotificationReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{44}
}

func (x *UssdSessionNotificationReply) GetMenu() *UssdMenu {
	if x != nil {
		return x.Menu
	}
	return nil
}

type VoiceCallNotificationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*VoiceCallAction `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *VoiceCallNotificationReply) Reset() {
	*x = VoiceCallNotificationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceCallNotificationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceCallNotificationReply) ProtoMessage() {}

func (x *VoiceCallNotificationReply) ProtoReflect() protoreflect.Message {
	mi := &file_app_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceCallNotificationReply.ProtoReflect.Descriptor instead.
func (*VoiceCallNotificationReply) Descriptor() ([]byte, []int) {
	return file_app_proto_rawDescGZIP(), []int{45}
}

func (x *VoiceCallNotificationReply) GetActions() []*VoiceCallAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

var File_app_proto protoreflect.FileDescriptor

var file_app_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0d, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x75, 0x73, 0x73, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x01, 0x0a, 0x15, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xe7,
	0x0f, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x5f, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x61, 0x64, 0x6f, 0x70, 0x74, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64,
	0x6f, 0x70, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x12, 0x61, 0x64, 0x6f, 0x70, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x68, 0x0a,
	0x15, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x13, 0x61, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x72, 0x0a, 0x19, 0x61, 0x64, 0x64, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x16, 0x61, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x71, 0x0a, 0x18, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x16, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x7b,
	0x0a, 0x1c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x19, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x62, 0x0a, 0x13, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x11, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12,
	0x62, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x12, 0x7b, 0x0a, 0x1c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x7b, 0x0a, 0x1c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x6e, 0x0a,
	0x17, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x15, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x71, 0x0a,
	0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x71, 0x0a, 0x18, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x16, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x0e, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x67, 0x12,
	0x59, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x10, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x5f,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68,
	0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x81, 0x06, 0x0a, 0x17, 0x41, 0x70, 0x70,
	0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68,
	0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48,
	0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x6c, 0x0a, 0x17, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65,
	0x61, 0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x15, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x66, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68,
	0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x48, 0x00, 0x52, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68,
	0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00,
	0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x54, 0x0a, 0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x4a, 0x0a, 0x0b, 0x74, 0x61, 0x67, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x5d, 0x0a, 0x0e,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49, 0x0a,
	0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x22, 0x95, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa7, 0x03, 0x0a,
	0x16, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x6e, 0x75, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x75, 0x73, 0x73, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x73, 0x73, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x75, 0x73, 0x73,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb0, 0x02, 0x0a, 0x19, 0x41, 0x64, 0x6f, 0x70, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x15, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x54, 0x0a, 0x12, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0xaf, 0x02, 0x0a, 0x1a, 0x41, 0x64,
	0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49,
	0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x42,
	0x0a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x1d,
	0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x36, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xfe, 0x01, 0x0a, 0x1d,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x51, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x42, 0x0a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x20,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x36, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa2, 0x02, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49, 0x0a,
	0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22,
	0xfb, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x51, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0xbb, 0x02,
	0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0xb1, 0x02, 0x0a, 0x20,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x21, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22,
	0xfd, 0x01, 0x0a, 0x1c, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x21, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22,
	0xd1, 0x01, 0x0a, 0x1a, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xb0, 0x03, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0c, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x61, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x80, 0x02, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x49,
	0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42, 0x0a, 0x0a,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0xfd, 0x01, 0x0a, 0x12, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x55, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xe7, 0x01, 0x0a, 0x15, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68,
	0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x55, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68,
	0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x22, 0xa8, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xf7,
	0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x17, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x46,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x4c, 0x0a, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x64, 0x65, 0x62, 0x69, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x12, 0x4e, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x14, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x64, 0x65,
	0x62, 0x69, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4a, 0x0a,
	0x12, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x14, 0x4d, 0x61,
	0x6b, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xf3, 0x01, 0x0a, 0x12, 0x4d, 0x61, 0x6b, 0x65, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x35, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0xd8, 0x08, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4a, 0x0a, 0x08,
	0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x76, 0x0a, 0x18, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x76, 0x0a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x60, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5a, 0x0a, 0x0e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x54, 0x0a, 0x0c, 0x75, 0x73, 0x73, 0x64, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x73, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0b, 0x75, 0x73, 0x73, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0a,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68,
	0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x60, 0x0a, 0x10,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5a,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6d, 0x0a, 0x15, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0xd7, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x41,
	0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x59, 0x0a, 0x0c, 0x75, 0x73, 0x73, 0x64, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x73, 0x73, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48,
	0x00, 0x52, 0x0b, 0x75, 0x73, 0x73, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x53,
	0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xb5, 0x02, 0x0a,
	0x22, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xf1, 0x02, 0x0a, 0x22, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x55, 0x0a,
	0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68,
	0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x08,
	0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x35, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0xc0, 0x03, 0x0a, 0x1b, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x05, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x47, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x19,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xb0, 0x02, 0x0a, 0x17, 0x55, 0x73, 0x73, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x73, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4f,
	0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x32, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0xf3, 0x03, 0x0a, 0x15, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x51, 0x0a,
	0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x4c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3f, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x48, 0x6f, 0x70, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x73, 0x68, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x99, 0x03, 0x0a, 0x1b, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x75, 0x72,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x53, 0x0a,
	0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x1f, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x54, 0x0a, 0x1c, 0x55, 0x73, 0x73, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x34, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x73, 0x64, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0x5f, 0x0a, 0x1a, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_proto_rawDescOnce sync.Once
	file_app_proto_rawDescData = file_app_proto_rawDesc
)

func file_app_proto_rawDescGZIP() []byte {
	file_app_proto_rawDescOnce.Do(func() {
		file_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_proto_rawDescData)
	})
	return file_app_proto_rawDescData
}

var file_app_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_app_proto_goTypes = []interface{}{
	(*AppConnectionMetadata)(nil),              // 0: com.elarian.hera.proto.AppConnectionMetadata
	(*AppToServerCommand)(nil),                 // 1: com.elarian.hera.proto.AppToServerCommand
	(*AppToServerCommandReply)(nil),            // 2: com.elarian.hera.proto.AppToServerCommandReply
	(*AuthTokenReply)(nil),                     // 3: com.elarian.hera.proto.AuthTokenReply
	(*GetCustomerStateCommand)(nil),            // 4: com.elarian.hera.proto.GetCustomerStateCommand
	(*GetCustomerStateReply)(nil),              // 5: com.elarian.hera.proto.GetCustomerStateReply
	(*CustomerStateReplyData)(nil),             // 6: com.elarian.hera.proto.CustomerStateReplyData
	(*AdoptCustomerStateCommand)(nil),          // 7: com.elarian.hera.proto.AdoptCustomerStateCommand
	(*AddCustomerReminderCommand)(nil),         // 8: com.elarian.hera.proto.AddCustomerReminderCommand
	(*AddCustomerReminderTagCommand)(nil),      // 9: com.elarian.hera.proto.AddCustomerReminderTagCommand
	(*CancelCustomerReminderCommand)(nil),      // 10: com.elarian.hera.proto.CancelCustomerReminderCommand
	(*CancelCustomerReminderTagCommand)(nil),   // 11: com.elarian.hera.proto.CancelCustomerReminderTagCommand
	(*UpdateCustomerTagCommand)(nil),           // 12: com.elarian.hera.proto.UpdateCustomerTagCommand
	(*DeleteCustomerTagCommand)(nil),           // 13: com.elarian.hera.proto.DeleteCustomerTagCommand
	(*UpdateCustomerSecondaryIdCommand)(nil),   // 14: com.elarian.hera.proto.UpdateCustomerSecondaryIdCommand
	(*DeleteCustomerSecondaryIdCommand)(nil),   // 15: com.elarian.hera.proto.DeleteCustomerSecondaryIdCommand
	(*LeaseCustomerMetadataCommand)(nil),       // 16: com.elarian.hera.proto.LeaseCustomerMetadataCommand
	(*LeaseCustomerMetadataReply)(nil),         // 17: com.elarian.hera.proto.LeaseCustomerMetadataReply
	(*UpdateCustomerMetadataCommand)(nil),      // 18: com.elarian.hera.proto.UpdateCustomerMetadataCommand
	(*DeleteCustomerMetadataCommand)(nil),      // 19: com.elarian.hera.proto.DeleteCustomerMetadataCommand
	(*SendMessageCommand)(nil),                 // 20: com.elarian.hera.proto.SendMessageCommand
	(*SendMessageTagCommand)(nil),              // 21: com.elarian.hera.proto.SendMessageTagCommand
	(*ReplyToMessageCommand)(nil),              // 22: com.elarian.hera.proto.ReplyToMessageCommand
	(*SendMessageReply)(nil),                   // 23: com.elarian.hera.proto.SendMessageReply
	(*MessagingConsentCommand)(nil),            // 24: com.elarian.hera.proto.MessagingConsentCommand
	(*MessagingConsentReply)(nil),              // 25: com.elarian.hera.proto.MessagingConsentReply
	(*InitiatePaymentCommand)(nil),             // 26: com.elarian.hera.proto.InitiatePaymentCommand
	(*InitiatePaymentReply)(nil),               // 27: com.elarian.hera.proto.InitiatePaymentReply
	(*MakeVoiceCallCommand)(nil),               // 28: com.elarian.hera.proto.MakeVoiceCallCommand
	(*MakeVoiceCallReply)(nil),                 // 29: com.elarian.hera.proto.MakeVoiceCallReply
	(*UpdateCustomerStateReply)(nil),           // 30: com.elarian.hera.proto.UpdateCustomerStateReply
	(*TagCommandReply)(nil),                    // 31: com.elarian.hera.proto.TagCommandReply
	(*ServerToAppNotification)(nil),            // 32: com.elarian.hera.proto.ServerToAppNotification
	(*ServerToAppNotificationReply)(nil),       // 33: com.elarian.hera.proto.ServerToAppNotificationReply
	(*MessagingConsentStatusNotification)(nil), // 34: com.elarian.hera.proto.MessagingConsentStatusNotification
	(*MessagingSessionStatusNotification)(nil), // 35: com.elarian.hera.proto.MessagingSessionStatusNotification
	(*ReminderNotification)(nil),               // 36: com.elarian.hera.proto.ReminderNotification
	(*ReceivedMessageNotification)(nil),        // 37: com.elarian.hera.proto.ReceivedMessageNotification
	(*MessageStatusNotification)(nil),          // 38: com.elarian.hera.proto.MessageStatusNotification
	(*UssdSessionNotification)(nil),            // 39: com.elarian.hera.proto.UssdSessionNotification
	(*VoiceCallNotification)(nil),              // 40: com.elarian.hera.proto.VoiceCallNotification
	(*ReceivedPaymentNotification)(nil),        // 41: com.elarian.hera.proto.ReceivedPaymentNotification
	(*PaymentStatusNotification)(nil),          // 42: com.elarian.hera.proto.PaymentStatusNotification
	(*WalletPaymentStatusNotification)(nil),    // 43: com.elarian.hera.proto.WalletPaymentStatusNotification
	(*UssdSessionNotificationReply)(nil),       // 44: com.elarian.hera.proto.UssdSessionNotificationReply
	(*VoiceCallNotificationReply)(nil),         // 45: com.elarian.hera.proto.VoiceCallNotificationReply
	nil,                                        // 46: com.elarian.hera.proto.UpdateCustomerMetadataCommand.MetadataEntry
	(*timestamp.Timestamp)(nil),                // 47: google.protobuf.Timestamp
	(*duration.Duration)(nil),                  // 48: google.protobuf.Duration
	(*CustomerNumber)(nil),                     // 49: com.elarian.hera.proto.CustomerNumber
	(*IndexMapping)(nil),                       // 50: com.elarian.hera.proto.IndexMapping
	(*NuclearState)(nil),                       // 51: com.elarian.hera.proto.NuclearState
	(*MessagingState)(nil),                     // 52: com.elarian.hera.proto.MessagingState
	(*UssdState)(nil),                          // 53: com.elarian.hera.proto.UssdState
	(*VoiceState)(nil),                         // 54: com.elarian.hera.proto.VoiceState
	(*PaymentState)(nil),                       // 55: com.elarian.hera.proto.PaymentState
	(*CustomerReminder)(nil),                   // 56: com.elarian.hera.proto.CustomerReminder
	(*CustomerIndex)(nil),                      // 57: com.elarian.hera.proto.CustomerIndex
	(*wrappers.StringValue)(nil),               // 58: google.protobuf.StringValue
	(*DataMapValue)(nil),                       // 59: com.elarian.hera.proto.DataMapValue
	(*MessagingChannelNumber)(nil),             // 60: com.elarian.hera.proto.MessagingChannelNumber
	(*CustomerMessageBody)(nil),                // 61: com.elarian.hera.proto.CustomerMessageBody
	(MessageDeliveryStatus)(0),                 // 62: com.elarian.hera.proto.MessageDeliveryStatus
	(MessagingConsentAction)(0),                // 63: com.elarian.hera.proto.MessagingConsentAction
	(MessagingConsentStatus)(0),                // 64: com.elarian.hera.proto.MessagingConsentStatus
	(*PaymentCounterParty)(nil),                // 65: com.elarian.hera.proto.PaymentCounterParty
	(*Cash)(nil),                               // 66: com.elarian.hera.proto.Cash
	(PaymentStatus)(0),                         // 67: com.elarian.hera.proto.PaymentStatus
	(*VoiceChannelNumber)(nil),                 // 68: com.elarian.hera.proto.VoiceChannelNumber
	(VoiceCallStatus)(0),                       // 69: com.elarian.hera.proto.VoiceCallStatus
	(MessagingSessionStatus)(0),                // 70: com.elarian.hera.proto.MessagingSessionStatus
	(*MediaMessageBody)(nil),                   // 71: com.elarian.hera.proto.MediaMessageBody
	(*LocationMessageBody)(nil),                // 72: com.elarian.hera.proto.LocationMessageBody
	(*UssdChannelNumber)(nil),                  // 73: com.elarian.hera.proto.UssdChannelNumber
	(CustomerEventDirection)(0),                // 74: com.elarian.hera.proto.CustomerEventDirection
	(*VoiceCallHopInput)(nil),                  // 75: com.elarian.hera.proto.VoiceCallHopInput
	(*PaymentChannelNumber)(nil),               // 76: com.elarian.hera.proto.PaymentChannelNumber
	(*UssdMenu)(nil),                           // 77: com.elarian.hera.proto.UssdMenu
	(*VoiceCallAction)(nil),                    // 78: com.elarian.hera.proto.VoiceCallAction
}
var file_app_proto_depIdxs = []int32{
	47,  // 0: com.elarian.hera.proto.AppConnectionMetadata.timestamp:type_name -> google.protobuf.Timestamp
	4,   // 1: com.elarian.hera.proto.AppToServerCommand.get_customer_state:type_name -> com.elarian.hera.proto.GetCustomerStateCommand
	7,   // 2: com.elarian.hera.proto.AppToServerCommand.adopt_customer_state:type_name -> com.elarian.hera.proto.AdoptCustomerStateCommand
	8,   // 3: com.elarian.hera.proto.AppToServerCommand.add_customer_reminder:type_name -> com.elarian.hera.proto.AddCustomerReminderCommand
	9,   // 4: com.elarian.hera.proto.AppToServerCommand.add_customer_reminder_tag:type_name -> com.elarian.hera.proto.AddCustomerReminderTagCommand
	10,  // 5: com.elarian.hera.proto.AppToServerCommand.cancel_customer_reminder:type_name -> com.elarian.hera.proto.CancelCustomerReminderCommand
	11,  // 6: com.elarian.hera.proto.AppToServerCommand.cancel_customer_reminder_tag:type_name -> com.elarian.hera.proto.CancelCustomerReminderTagCommand
	12,  // 7: com.elarian.hera.proto.AppToServerCommand.update_customer_tag:type_name -> com.elarian.hera.proto.UpdateCustomerTagCommand
	13,  // 8: com.elarian.hera.proto.AppToServerCommand.delete_customer_tag:type_name -> com.elarian.hera.proto.DeleteCustomerTagCommand
	14,  // 9: com.elarian.hera.proto.AppToServerCommand.update_customer_secondary_id:type_name -> com.elarian.hera.proto.UpdateCustomerSecondaryIdCommand
	15,  // 10: com.elarian.hera.proto.AppToServerCommand.delete_customer_secondary_id:type_name -> com.elarian.hera.proto.DeleteCustomerSecondaryIdCommand
	16,  // 11: com.elarian.hera.proto.AppToServerCommand.lease_customer_metadata:type_name -> com.elarian.hera.proto.LeaseCustomerMetadataCommand
	18,  // 12: com.elarian.hera.proto.AppToServerCommand.update_customer_metadata:type_name -> com.elarian.hera.proto.UpdateCustomerMetadataCommand
	19,  // 13: com.elarian.hera.proto.AppToServerCommand.delete_customer_metadata:type_name -> com.elarian.hera.proto.DeleteCustomerMetadataCommand
	20,  // 14: com.elarian.hera.proto.AppToServerCommand.send_message:type_name -> com.elarian.hera.proto.SendMessageCommand
	21,  // 15: com.elarian.hera.proto.AppToServerCommand.send_message_tag:type_name -> com.elarian.hera.proto.SendMessageTagCommand
	22,  // 16: com.elarian.hera.proto.AppToServerCommand.reply_to_message:type_name -> com.elarian.hera.proto.ReplyToMessageCommand
	24,  // 17: com.elarian.hera.proto.AppToServerCommand.messaging_consent:type_name -> com.elarian.hera.proto.MessagingConsentCommand
	26,  // 18: com.elarian.hera.proto.AppToServerCommand.initiate_payment:type_name -> com.elarian.hera.proto.InitiatePaymentCommand
	28,  // 19: com.elarian.hera.proto.AppToServerCommand.make_voice_call:type_name -> com.elarian.hera.proto.MakeVoiceCallCommand
	5,   // 20: com.elarian.hera.proto.AppToServerCommandReply.get_customer_state:type_name -> com.elarian.hera.proto.GetCustomerStateReply
	17,  // 21: com.elarian.hera.proto.AppToServerCommandReply.lease_customer_metadata:type_name -> com.elarian.hera.proto.LeaseCustomerMetadataReply
	30,  // 22: com.elarian.hera.proto.AppToServerCommandReply.update_customer_state:type_name -> com.elarian.hera.proto.UpdateCustomerStateReply
	23,  // 23: com.elarian.hera.proto.AppToServerCommandReply.send_message:type_name -> com.elarian.hera.proto.SendMessageReply
	25,  // 24: com.elarian.hera.proto.AppToServerCommandReply.messaging_consent:type_name -> com.elarian.hera.proto.MessagingConsentReply
	27,  // 25: com.elarian.hera.proto.AppToServerCommandReply.initiate_payment:type_name -> com.elarian.hera.proto.InitiatePaymentReply
	29,  // 26: com.elarian.hera.proto.AppToServerCommandReply.make_voice_call:type_name -> com.elarian.hera.proto.MakeVoiceCallReply
	31,  // 27: com.elarian.hera.proto.AppToServerCommandReply.tag_command:type_name -> com.elarian.hera.proto.TagCommandReply
	48,  // 28: com.elarian.hera.proto.AuthTokenReply.lifetime:type_name -> google.protobuf.Duration
	49,  // 29: com.elarian.hera.proto.GetCustomerStateCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 30: com.elarian.hera.proto.GetCustomerStateCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	6,   // 31: com.elarian.hera.proto.GetCustomerStateReply.data:type_name -> com.elarian.hera.proto.CustomerStateReplyData
	51,  // 32: com.elarian.hera.proto.CustomerStateReplyData.nuclear_state:type_name -> com.elarian.hera.proto.NuclearState
	52,  // 33: com.elarian.hera.proto.CustomerStateReplyData.messaging_state:type_name -> com.elarian.hera.proto.MessagingState
	53,  // 34: com.elarian.hera.proto.CustomerStateReplyData.ussd_state:type_name -> com.elarian.hera.proto.UssdState
	54,  // 35: com.elarian.hera.proto.CustomerStateReplyData.voice_state:type_name -> com.elarian.hera.proto.VoiceState
	55,  // 36: com.elarian.hera.proto.CustomerStateReplyData.payment_state:type_name -> com.elarian.hera.proto.PaymentState
	49,  // 37: com.elarian.hera.proto.AdoptCustomerStateCommand.other_customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 38: com.elarian.hera.proto.AdoptCustomerStateCommand.other_secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	49,  // 39: com.elarian.hera.proto.AddCustomerReminderCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 40: com.elarian.hera.proto.AddCustomerReminderCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	56,  // 41: com.elarian.hera.proto.AddCustomerReminderCommand.reminder:type_name -> com.elarian.hera.proto.CustomerReminder
	50,  // 42: com.elarian.hera.proto.AddCustomerReminderTagCommand.tag:type_name -> com.elarian.hera.proto.IndexMapping
	56,  // 43: com.elarian.hera.proto.AddCustomerReminderTagCommand.reminder:type_name -> com.elarian.hera.proto.CustomerReminder
	49,  // 44: com.elarian.hera.proto.CancelCustomerReminderCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 45: com.elarian.hera.proto.CancelCustomerReminderCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	50,  // 46: com.elarian.hera.proto.CancelCustomerReminderTagCommand.tag:type_name -> com.elarian.hera.proto.IndexMapping
	49,  // 47: com.elarian.hera.proto.UpdateCustomerTagCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 48: com.elarian.hera.proto.UpdateCustomerTagCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	57,  // 49: com.elarian.hera.proto.UpdateCustomerTagCommand.tags:type_name -> com.elarian.hera.proto.CustomerIndex
	49,  // 50: com.elarian.hera.proto.DeleteCustomerTagCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 51: com.elarian.hera.proto.DeleteCustomerTagCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	49,  // 52: com.elarian.hera.proto.UpdateCustomerSecondaryIdCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 53: com.elarian.hera.proto.UpdateCustomerSecondaryIdCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	57,  // 54: com.elarian.hera.proto.UpdateCustomerSecondaryIdCommand.secondary_ids:type_name -> com.elarian.hera.proto.CustomerIndex
	49,  // 55: com.elarian.hera.proto.DeleteCustomerSecondaryIdCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 56: com.elarian.hera.proto.DeleteCustomerSecondaryIdCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	50,  // 57: com.elarian.hera.proto.DeleteCustomerSecondaryIdCommand.mappings:type_name -> com.elarian.hera.proto.IndexMapping
	49,  // 58: com.elarian.hera.proto.LeaseCustomerMetadataCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 59: com.elarian.hera.proto.LeaseCustomerMetadataCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	58,  // 60: com.elarian.hera.proto.LeaseCustomerMetadataReply.customer_id:type_name -> google.protobuf.StringValue
	59,  // 61: com.elarian.hera.proto.LeaseCustomerMetadataReply.value:type_name -> com.elarian.hera.proto.DataMapValue
	49,  // 62: com.elarian.hera.proto.UpdateCustomerMetadataCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 63: com.elarian.hera.proto.UpdateCustomerMetadataCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	46,  // 64: com.elarian.hera.proto.UpdateCustomerMetadataCommand.metadata:type_name -> com.elarian.hera.proto.UpdateCustomerMetadataCommand.MetadataEntry
	49,  // 65: com.elarian.hera.proto.DeleteCustomerMetadataCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	50,  // 66: com.elarian.hera.proto.DeleteCustomerMetadataCommand.secondary_id:type_name -> com.elarian.hera.proto.IndexMapping
	49,  // 67: com.elarian.hera.proto.SendMessageCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	60,  // 68: com.elarian.hera.proto.SendMessageCommand.channel_number:type_name -> com.elarian.hera.proto.MessagingChannelNumber
	61,  // 69: com.elarian.hera.proto.SendMessageCommand.body:type_name -> com.elarian.hera.proto.CustomerMessageBody
	50,  // 70: com.elarian.hera.proto.SendMessageTagCommand.tag:type_name -> com.elarian.hera.proto.IndexMapping
	60,  // 71: com.elarian.hera.proto.SendMessageTagCommand.channel_number:type_name -> com.elarian.hera.proto.MessagingChannelNumber
	61,  // 72: com.elarian.hera.proto.SendMessageTagCommand.body:type_name -> com.elarian.hera.proto.CustomerMessageBody
	61,  // 73: com.elarian.hera.proto.ReplyToMessageCommand.body:type_name -> com.elarian.hera.proto.CustomerMessageBody
	62,  // 74: com.elarian.hera.proto.SendMessageReply.status:type_name -> com.elarian.hera.proto.MessageDeliveryStatus
	58,  // 75: com.elarian.hera.proto.SendMessageReply.message_id:type_name -> google.protobuf.StringValue
	58,  // 76: com.elarian.hera.proto.SendMessageReply.customer_id:type_name -> google.protobuf.StringValue
	49,  // 77: com.elarian.hera.proto.MessagingConsentCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	60,  // 78: com.elarian.hera.proto.MessagingConsentCommand.channel_number:type_name -> com.elarian.hera.proto.MessagingChannelNumber
	63,  // 79: com.elarian.hera.proto.MessagingConsentCommand.action:type_name -> com.elarian.hera.proto.MessagingConsentAction
	64,  // 80: com.elarian.hera.proto.MessagingConsentReply.status:type_name -> com.elarian.hera.proto.MessagingConsentStatus
	58,  // 81: com.elarian.hera.proto.MessagingConsentReply.customer_id:type_name -> google.protobuf.StringValue
	65,  // 82: com.elarian.hera.proto.InitiatePaymentCommand.debit_party:type_name -> com.elarian.hera.proto.PaymentCounterParty
	65,  // 83: com.elarian.hera.proto.InitiatePaymentCommand.credit_party:type_name -> com.elarian.hera.proto.PaymentCounterParty
	66,  // 84: com.elarian.hera.proto.InitiatePaymentCommand.value:type_name -> com.elarian.hera.proto.Cash
	67,  // 85: com.elarian.hera.proto.InitiatePaymentReply.status:type_name -> com.elarian.hera.proto.PaymentStatus
	58,  // 86: com.elarian.hera.proto.InitiatePaymentReply.transaction_id:type_name -> google.protobuf.StringValue
	58,  // 87: com.elarian.hera.proto.InitiatePaymentReply.debit_customer_id:type_name -> google.protobuf.StringValue
	58,  // 88: com.elarian.hera.proto.InitiatePaymentReply.credit_customer_id:type_name -> google.protobuf.StringValue
	49,  // 89: com.elarian.hera.proto.MakeVoiceCallCommand.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	68,  // 90: com.elarian.hera.proto.MakeVoiceCallCommand.channel_number:type_name -> com.elarian.hera.proto.VoiceChannelNumber
	69,  // 91: com.elarian.hera.proto.MakeVoiceCallReply.status:type_name -> com.elarian.hera.proto.VoiceCallStatus
	58,  // 92: com.elarian.hera.proto.MakeVoiceCallReply.session_id:type_name -> google.protobuf.StringValue
	58,  // 93: com.elarian.hera.proto.MakeVoiceCallReply.customer_id:type_name -> google.protobuf.StringValue
	58,  // 94: com.elarian.hera.proto.UpdateCustomerStateReply.customer_id:type_name -> google.protobuf.StringValue
	58,  // 95: com.elarian.hera.proto.TagCommandReply.work_id:type_name -> google.protobuf.StringValue
	47,  // 96: com.elarian.hera.proto.ServerToAppNotification.created_at:type_name -> google.protobuf.Timestamp
	36,  // 97: com.elarian.hera.proto.ServerToAppNotification.reminder:type_name -> com.elarian.hera.proto.ReminderNotification
	34,  // 98: com.elarian.hera.proto.ServerToAppNotification.messaging_consent_status:type_name -> com.elarian.hera.proto.MessagingConsentStatusNotification
	35,  // 99: com.elarian.hera.proto.ServerToAppNotification.messaging_session_status:type_name -> com.elarian.hera.proto.MessagingSessionStatusNotification
	37,  // 100: com.elarian.hera.proto.ServerToAppNotification.received_message:type_name -> com.elarian.hera.proto.ReceivedMessageNotification
	38,  // 101: com.elarian.hera.proto.ServerToAppNotification.message_status:type_name -> com.elarian.hera.proto.MessageStatusNotification
	39,  // 102: com.elarian.hera.proto.ServerToAppNotification.ussd_session:type_name -> com.elarian.hera.proto.UssdSessionNotification
	40,  // 103: com.elarian.hera.proto.ServerToAppNotification.voice_call:type_name -> com.elarian.hera.proto.VoiceCallNotification
	41,  // 104: com.elarian.hera.proto.ServerToAppNotification.received_payment:type_name -> com.elarian.hera.proto.ReceivedPaymentNotification
	42,  // 105: com.elarian.hera.proto.ServerToAppNotification.payment_status:type_name -> com.elarian.hera.proto.PaymentStatusNotification
	43,  // 106: com.elarian.hera.proto.ServerToAppNotification.wallet_payment_status:type_name -> com.elarian.hera.proto.WalletPaymentStatusNotification
	44,  // 107: com.elarian.hera.proto.ServerToAppNotificationReply.ussd_session:type_name -> com.elarian.hera.proto.UssdSessionNotificationReply
	45,  // 108: com.elarian.hera.proto.ServerToAppNotificationReply.voice_call:type_name -> com.elarian.hera.proto.VoiceCallNotificationReply
	49,  // 109: com.elarian.hera.proto.MessagingConsentStatusNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	60,  // 110: com.elarian.hera.proto.MessagingConsentStatusNotification.channel_number:type_name -> com.elarian.hera.proto.MessagingChannelNumber
	64,  // 111: com.elarian.hera.proto.MessagingConsentStatusNotification.status:type_name -> com.elarian.hera.proto.MessagingConsentStatus
	49,  // 112: com.elarian.hera.proto.MessagingSessionStatusNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	60,  // 113: com.elarian.hera.proto.MessagingSessionStatusNotification.channel_number:type_name -> com.elarian.hera.proto.MessagingChannelNumber
	47,  // 114: com.elarian.hera.proto.MessagingSessionStatusNotification.expiration:type_name -> google.protobuf.Timestamp
	70,  // 115: com.elarian.hera.proto.MessagingSessionStatusNotification.status:type_name -> com.elarian.hera.proto.MessagingSessionStatus
	56,  // 116: com.elarian.hera.proto.ReminderNotification.reminder:type_name -> com.elarian.hera.proto.CustomerReminder
	57,  // 117: com.elarian.hera.proto.ReminderNotification.tag:type_name -> com.elarian.hera.proto.CustomerIndex
	58,  // 118: com.elarian.hera.proto.ReminderNotification.work_id:type_name -> google.protobuf.StringValue
	49,  // 119: com.elarian.hera.proto.ReceivedMessageNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	60,  // 120: com.elarian.hera.proto.ReceivedMessageNotification.channel_number:type_name -> com.elarian.hera.proto.MessagingChannelNumber
	58,  // 121: com.elarian.hera.proto.ReceivedMessageNotification.text:type_name -> google.protobuf.StringValue
	71,  // 122: com.elarian.hera.proto.ReceivedMessageNotification.media:type_name -> com.elarian.hera.proto.MediaMessageBody
	72,  // 123: com.elarian.hera.proto.ReceivedMessageNotification.location:type_name -> com.elarian.hera.proto.LocationMessageBody
	62,  // 124: com.elarian.hera.proto.MessageStatusNotification.status:type_name -> com.elarian.hera.proto.MessageDeliveryStatus
	73,  // 125: com.elarian.hera.proto.UssdSessionNotification.channel_number:type_name -> com.elarian.hera.proto.UssdChannelNumber
	49,  // 126: com.elarian.hera.proto.UssdSessionNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	58,  // 127: com.elarian.hera.proto.UssdSessionNotification.input:type_name -> google.protobuf.StringValue
	68,  // 128: com.elarian.hera.proto.VoiceCallNotification.channel_number:type_name -> com.elarian.hera.proto.VoiceChannelNumber
	49,  // 129: com.elarian.hera.proto.VoiceCallNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	74,  // 130: com.elarian.hera.proto.VoiceCallNotification.direction:type_name -> com.elarian.hera.proto.CustomerEventDirection
	75,  // 131: com.elarian.hera.proto.VoiceCallNotification.input:type_name -> com.elarian.hera.proto.VoiceCallHopInput
	48,  // 132: com.elarian.hera.proto.VoiceCallNotification.duration:type_name -> google.protobuf.Duration
	66,  // 133: com.elarian.hera.proto.VoiceCallNotification.cost:type_name -> com.elarian.hera.proto.Cash
	49,  // 134: com.elarian.hera.proto.ReceivedPaymentNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	76,  // 135: com.elarian.hera.proto.ReceivedPaymentNotification.channel_number:type_name -> com.elarian.hera.proto.PaymentChannelNumber
	66,  // 136: com.elarian.hera.proto.ReceivedPaymentNotification.value:type_name -> com.elarian.hera.proto.Cash
	67,  // 137: com.elarian.hera.proto.ReceivedPaymentNotification.status:type_name -> com.elarian.hera.proto.PaymentStatus
	58,  // 138: com.elarian.hera.proto.PaymentStatusNotification.customer_id:type_name -> google.protobuf.StringValue
	67,  // 139: com.elarian.hera.proto.PaymentStatusNotification.status:type_name -> com.elarian.hera.proto.PaymentStatus
	67,  // 140: com.elarian.hera.proto.WalletPaymentStatusNotification.status:type_name -> com.elarian.hera.proto.PaymentStatus
	77,  // 141: com.elarian.hera.proto.UssdSessionNotificationReply.menu:type_name -> com.elarian.hera.proto.UssdMenu
	78,  // 142: com.elarian.hera.proto.VoiceCallNotificationReply.actions:type_name -> com.elarian.hera.proto.VoiceCallAction
	59,  // 143: com.elarian.hera.proto.UpdateCustomerMetadataCommand.MetadataEntry.value:type_name -> com.elarian.hera.proto.DataMapValue
	144, // [144:144] is the sub-list for method output_type
	144, // [144:144] is the sub-list for method input_type
	144, // [144:144] is the sub-list for extension type_name
	144, // [144:144] is the sub-list for extension extendee
	0,   // [0:144] is the sub-list for field type_name
}

func init() { file_app_proto_init() }
func file_app_proto_init() {
	if File_app_proto != nil {
		return
	}
	file_common_proto_init()
	file_nuclear_proto_init()
	file_messaging_proto_init()
	file_payment_proto_init()
	file_ussd_proto_init()
	file_voice_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppToServerCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppToServerCommandReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerStateCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerStateReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdoptCustomerStateCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomerReminderCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCustomerReminderTagCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCustomerReminderCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCustomerReminderTagCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerTagCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomerTagCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerSecondaryIdCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomerSecondaryIdCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaseCustomerMetadataCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaseCustomerMetadataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerMetadataCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomerMetadataCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageTagCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyToMessageCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingConsentCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingConsentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiatePaymentCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiatePaymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeVoiceCallCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeVoiceCallReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagCommandReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToAppNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToAppNotificationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingConsentStatusNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingSessionStatusNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReminderNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedMessageNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageStatusNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UssdSessionNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceCallNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedPaymentNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentStatusNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletPaymentStatusNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UssdSessionNotificationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceCallNotificationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_app_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AppToServerCommand_GetCustomerState)(nil),
		(*AppToServerCommand_AdoptCustomerState)(nil),
		(*AppToServerCommand_AddCustomerReminder)(nil),
		(*AppToServerCommand_AddCustomerReminderTag)(nil),
		(*AppToServerCommand_CancelCustomerReminder)(nil),
		(*AppToServerCommand_CancelCustomerReminderTag)(nil),
		(*AppToServerCommand_UpdateCustomerTag)(nil),
		(*AppToServerCommand_DeleteCustomerTag)(nil),
		(*AppToServerCommand_UpdateCustomerSecondaryId)(nil),
		(*AppToServerCommand_DeleteCustomerSecondaryId)(nil),
		(*AppToServerCommand_LeaseCustomerMetadata)(nil),
		(*AppToServerCommand_UpdateCustomerMetadata)(nil),
		(*AppToServerCommand_DeleteCustomerMetadata)(nil),
		(*AppToServerCommand_SendMessage)(nil),
		(*AppToServerCommand_SendMessageTag)(nil),
		(*AppToServerCommand_ReplyToMessage)(nil),
		(*AppToServerCommand_MessagingConsent)(nil),
		(*AppToServerCommand_InitiatePayment)(nil),
		(*AppToServerCommand_MakeVoiceCall)(nil),
	}
	file_app_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AppToServerCommandReply_GetCustomerState)(nil),
		(*AppToServerCommandReply_LeaseCustomerMetadata)(nil),
		(*AppToServerCommandReply_UpdateCustomerState)(nil),
		(*AppToServerCommandReply_SendMessage)(nil),
		(*AppToServerCommandReply_MessagingConsent)(nil),
		(*AppToServerCommandReply_InitiatePayment)(nil),
		(*AppToServerCommandReply_MakeVoiceCall)(nil),
		(*AppToServerCommandReply_TagCommand)(nil),
	}
	file_app_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetCustomerStateCommand_CustomerId)(nil),
		(*GetCustomerStateCommand_CustomerNumber)(nil),
		(*GetCustomerStateCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*AdoptCustomerStateCommand_OtherCustomerId)(nil),
		(*AdoptCustomerStateCommand_OtherCustomerNumber)(nil),
		(*AdoptCustomerStateCommand_OtherSecondaryId)(nil),
	}
	file_app_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AddCustomerReminderCommand_CustomerId)(nil),
		(*AddCustomerReminderCommand_CustomerNumber)(nil),
		(*AddCustomerReminderCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*CancelCustomerReminderCommand_CustomerId)(nil),
		(*CancelCustomerReminderCommand_CustomerNumber)(nil),
		(*CancelCustomerReminderCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*UpdateCustomerTagCommand_CustomerId)(nil),
		(*UpdateCustomerTagCommand_CustomerNumber)(nil),
		(*UpdateCustomerTagCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*DeleteCustomerTagCommand_CustomerId)(nil),
		(*DeleteCustomerTagCommand_CustomerNumber)(nil),
		(*DeleteCustomerTagCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*UpdateCustomerSecondaryIdCommand_CustomerId)(nil),
		(*UpdateCustomerSecondaryIdCommand_CustomerNumber)(nil),
		(*UpdateCustomerSecondaryIdCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*DeleteCustomerSecondaryIdCommand_CustomerId)(nil),
		(*DeleteCustomerSecondaryIdCommand_CustomerNumber)(nil),
		(*DeleteCustomerSecondaryIdCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*LeaseCustomerMetadataCommand_CustomerId)(nil),
		(*LeaseCustomerMetadataCommand_CustomerNumber)(nil),
		(*LeaseCustomerMetadataCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*UpdateCustomerMetadataCommand_CustomerId)(nil),
		(*UpdateCustomerMetadataCommand_CustomerNumber)(nil),
		(*UpdateCustomerMetadataCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*DeleteCustomerMetadataCommand_CustomerId)(nil),
		(*DeleteCustomerMetadataCommand_CustomerNumber)(nil),
		(*DeleteCustomerMetadataCommand_SecondaryId)(nil),
	}
	file_app_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*ServerToAppNotification_Reminder)(nil),
		(*ServerToAppNotification_MessagingConsentStatus)(nil),
		(*ServerToAppNotification_MessagingSessionStatus)(nil),
		(*ServerToAppNotification_ReceivedMessage)(nil),
		(*ServerToAppNotification_MessageStatus)(nil),
		(*ServerToAppNotification_UssdSession)(nil),
		(*ServerToAppNotification_VoiceCall)(nil),
		(*ServerToAppNotification_ReceivedPayment)(nil),
		(*ServerToAppNotification_PaymentStatus)(nil),
		(*ServerToAppNotification_WalletPaymentStatus)(nil),
	}
	file_app_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*ServerToAppNotificationReply_UssdSession)(nil),
		(*ServerToAppNotificationReply_VoiceCall)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_proto_goTypes,
		DependencyIndexes: file_app_proto_depIdxs,
		MessageInfos:      file_app_proto_msgTypes,
	}.Build()
	File_app_proto = out.File
	file_app_proto_rawDesc = nil
	file_app_proto_goTypes = nil
	file_app_proto_depIdxs = nil
}
