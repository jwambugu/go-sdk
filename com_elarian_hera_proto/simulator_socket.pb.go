// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: simulator_socket.proto

package com_elarian_hera_proto

import (
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SimulatorToServerCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Entry:
	//	*SimulatorToServerCommand_ReceiveMessage
	//	*SimulatorToServerCommand_ReceivePayment
	//	*SimulatorToServerCommand_UpdatePaymentStatus
	Entry isSimulatorToServerCommand_Entry `protobuf_oneof:"entry"`
}

func (x *SimulatorToServerCommand) Reset() {
	*x = SimulatorToServerCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimulatorToServerCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulatorToServerCommand) ProtoMessage() {}

func (x *SimulatorToServerCommand) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulatorToServerCommand.ProtoReflect.Descriptor instead.
func (*SimulatorToServerCommand) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{0}
}

func (m *SimulatorToServerCommand) GetEntry() isSimulatorToServerCommand_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *SimulatorToServerCommand) GetReceiveMessage() *ReceiveMessageSimulatorCommand {
	if x, ok := x.GetEntry().(*SimulatorToServerCommand_ReceiveMessage); ok {
		return x.ReceiveMessage
	}
	return nil
}

func (x *SimulatorToServerCommand) GetReceivePayment() *ReceivePaymentSimulatorCommand {
	if x, ok := x.GetEntry().(*SimulatorToServerCommand_ReceivePayment); ok {
		return x.ReceivePayment
	}
	return nil
}

func (x *SimulatorToServerCommand) GetUpdatePaymentStatus() *UpdatePaymentStatusSimulatorCommand {
	if x, ok := x.GetEntry().(*SimulatorToServerCommand_UpdatePaymentStatus); ok {
		return x.UpdatePaymentStatus
	}
	return nil
}

type isSimulatorToServerCommand_Entry interface {
	isSimulatorToServerCommand_Entry()
}

type SimulatorToServerCommand_ReceiveMessage struct {
	ReceiveMessage *ReceiveMessageSimulatorCommand `protobuf:"bytes,1,opt,name=receive_message,json=receiveMessage,proto3,oneof"`
}

type SimulatorToServerCommand_ReceivePayment struct {
	ReceivePayment *ReceivePaymentSimulatorCommand `protobuf:"bytes,2,opt,name=receive_payment,json=receivePayment,proto3,oneof"`
}

type SimulatorToServerCommand_UpdatePaymentStatus struct {
	UpdatePaymentStatus *UpdatePaymentStatusSimulatorCommand `protobuf:"bytes,3,opt,name=update_payment_status,json=updatePaymentStatus,proto3,oneof"`
}

func (*SimulatorToServerCommand_ReceiveMessage) isSimulatorToServerCommand_Entry() {}

func (*SimulatorToServerCommand_ReceivePayment) isSimulatorToServerCommand_Entry() {}

func (*SimulatorToServerCommand_UpdatePaymentStatus) isSimulatorToServerCommand_Entry() {}

type ReceiveMessageSimulatorCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerNumber string                  `protobuf:"bytes,1,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *MessagingChannelNumber `protobuf:"bytes,2,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Parts          []*InboundMessageBody   `protobuf:"bytes,3,rep,name=parts,proto3" json:"parts,omitempty"`
	SessionId      *wrappers.StringValue   `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ReceiveMessageSimulatorCommand) Reset() {
	*x = ReceiveMessageSimulatorCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveMessageSimulatorCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageSimulatorCommand) ProtoMessage() {}

func (x *ReceiveMessageSimulatorCommand) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageSimulatorCommand.ProtoReflect.Descriptor instead.
func (*ReceiveMessageSimulatorCommand) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{1}
}

func (x *ReceiveMessageSimulatorCommand) GetCustomerNumber() string {
	if x != nil {
		return x.CustomerNumber
	}
	return ""
}

func (x *ReceiveMessageSimulatorCommand) GetChannelNumber() *MessagingChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *ReceiveMessageSimulatorCommand) GetParts() []*InboundMessageBody {
	if x != nil {
		return x.Parts
	}
	return nil
}

func (x *ReceiveMessageSimulatorCommand) GetSessionId() *wrappers.StringValue {
	if x != nil {
		return x.SessionId
	}
	return nil
}

type ReceivePaymentSimulatorCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId  string                `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ChannelNumber  *PaymentChannelNumber `protobuf:"bytes,2,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	CustomerNumber string                `protobuf:"bytes,3,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	Value          *Cash                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Status         PaymentStatus         `protobuf:"varint,5,opt,name=status,proto3,enum=com.elarian.hera.proto.PaymentStatus" json:"status,omitempty"`
}

func (x *ReceivePaymentSimulatorCommand) Reset() {
	*x = ReceivePaymentSimulatorCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivePaymentSimulatorCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivePaymentSimulatorCommand) ProtoMessage() {}

func (x *ReceivePaymentSimulatorCommand) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivePaymentSimulatorCommand.ProtoReflect.Descriptor instead.
func (*ReceivePaymentSimulatorCommand) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{2}
}

func (x *ReceivePaymentSimulatorCommand) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ReceivePaymentSimulatorCommand) GetChannelNumber() *PaymentChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *ReceivePaymentSimulatorCommand) GetCustomerNumber() string {
	if x != nil {
		return x.CustomerNumber
	}
	return ""
}

func (x *ReceivePaymentSimulatorCommand) GetValue() *Cash {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ReceivePaymentSimulatorCommand) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

type UpdatePaymentStatusSimulatorCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string        `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Status        PaymentStatus `protobuf:"varint,2,opt,name=status,proto3,enum=com.elarian.hera.proto.PaymentStatus" json:"status,omitempty"`
}

func (x *UpdatePaymentStatusSimulatorCommand) Reset() {
	*x = UpdatePaymentStatusSimulatorCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentStatusSimulatorCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentStatusSimulatorCommand) ProtoMessage() {}

func (x *UpdatePaymentStatusSimulatorCommand) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentStatusSimulatorCommand.ProtoReflect.Descriptor instead.
func (*UpdatePaymentStatusSimulatorCommand) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePaymentStatusSimulatorCommand) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *UpdatePaymentStatusSimulatorCommand) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

type SimulatorToServerCommandReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      bool             `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Description string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Message     *OutboundMessage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SimulatorToServerCommandReply) Reset() {
	*x = SimulatorToServerCommandReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimulatorToServerCommandReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulatorToServerCommandReply) ProtoMessage() {}

func (x *SimulatorToServerCommandReply) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulatorToServerCommandReply.ProtoReflect.Descriptor instead.
func (*SimulatorToServerCommandReply) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{4}
}

func (x *SimulatorToServerCommandReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SimulatorToServerCommandReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SimulatorToServerCommandReply) GetMessage() *OutboundMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type ServerToSimulatorNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Entry:
	//	*ServerToSimulatorNotification_SendMessage
	//	*ServerToSimulatorNotification_MakeVoiceCall
	//	*ServerToSimulatorNotification_SendCustomerPayment
	//	*ServerToSimulatorNotification_SendChannelPayment
	//	*ServerToSimulatorNotification_CheckoutPayment
	Entry isServerToSimulatorNotification_Entry `protobuf_oneof:"entry"`
}

func (x *ServerToSimulatorNotification) Reset() {
	*x = ServerToSimulatorNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToSimulatorNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToSimulatorNotification) ProtoMessage() {}

func (x *ServerToSimulatorNotification) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToSimulatorNotification.ProtoReflect.Descriptor instead.
func (*ServerToSimulatorNotification) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{5}
}

func (m *ServerToSimulatorNotification) GetEntry() isServerToSimulatorNotification_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *ServerToSimulatorNotification) GetSendMessage() *SendMessageSimulatorNotification {
	if x, ok := x.GetEntry().(*ServerToSimulatorNotification_SendMessage); ok {
		return x.SendMessage
	}
	return nil
}

func (x *ServerToSimulatorNotification) GetMakeVoiceCall() *MakeVoiceCallSimulatorNotification {
	if x, ok := x.GetEntry().(*ServerToSimulatorNotification_MakeVoiceCall); ok {
		return x.MakeVoiceCall
	}
	return nil
}

func (x *ServerToSimulatorNotification) GetSendCustomerPayment() *SendCustomerPaymentSimulatorNotification {
	if x, ok := x.GetEntry().(*ServerToSimulatorNotification_SendCustomerPayment); ok {
		return x.SendCustomerPayment
	}
	return nil
}

func (x *ServerToSimulatorNotification) GetSendChannelPayment() *SendChannelPaymentSimulatorNotification {
	if x, ok := x.GetEntry().(*ServerToSimulatorNotification_SendChannelPayment); ok {
		return x.SendChannelPayment
	}
	return nil
}

func (x *ServerToSimulatorNotification) GetCheckoutPayment() *CheckoutPaymentSimulatorNotification {
	if x, ok := x.GetEntry().(*ServerToSimulatorNotification_CheckoutPayment); ok {
		return x.CheckoutPayment
	}
	return nil
}

type isServerToSimulatorNotification_Entry interface {
	isServerToSimulatorNotification_Entry()
}

type ServerToSimulatorNotification_SendMessage struct {
	SendMessage *SendMessageSimulatorNotification `protobuf:"bytes,1,opt,name=send_message,json=sendMessage,proto3,oneof"`
}

type ServerToSimulatorNotification_MakeVoiceCall struct {
	MakeVoiceCall *MakeVoiceCallSimulatorNotification `protobuf:"bytes,2,opt,name=make_voice_call,json=makeVoiceCall,proto3,oneof"`
}

type ServerToSimulatorNotification_SendCustomerPayment struct {
	SendCustomerPayment *SendCustomerPaymentSimulatorNotification `protobuf:"bytes,3,opt,name=send_customer_payment,json=sendCustomerPayment,proto3,oneof"`
}

type ServerToSimulatorNotification_SendChannelPayment struct {
	SendChannelPayment *SendChannelPaymentSimulatorNotification `protobuf:"bytes,4,opt,name=send_channel_payment,json=sendChannelPayment,proto3,oneof"`
}

type ServerToSimulatorNotification_CheckoutPayment struct {
	CheckoutPayment *CheckoutPaymentSimulatorNotification `protobuf:"bytes,5,opt,name=checkout_payment,json=checkoutPayment,proto3,oneof"`
}

func (*ServerToSimulatorNotification_SendMessage) isServerToSimulatorNotification_Entry() {}

func (*ServerToSimulatorNotification_MakeVoiceCall) isServerToSimulatorNotification_Entry() {}

func (*ServerToSimulatorNotification_SendCustomerPayment) isServerToSimulatorNotification_Entry() {}

func (*ServerToSimulatorNotification_SendChannelPayment) isServerToSimulatorNotification_Entry() {}

func (*ServerToSimulatorNotification_CheckoutPayment) isServerToSimulatorNotification_Entry() {}

type ServerToSimulatorNotificationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerToSimulatorNotificationReply) Reset() {
	*x = ServerToSimulatorNotificationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToSimulatorNotificationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToSimulatorNotificationReply) ProtoMessage() {}

func (x *ServerToSimulatorNotificationReply) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToSimulatorNotificationReply.ProtoReflect.Descriptor instead.
func (*ServerToSimulatorNotificationReply) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{6}
}

type SendMessageSimulatorNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId          string                  `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CustomerId     string                  `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	MessageId      string                  `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	CustomerNumber *CustomerNumber         `protobuf:"bytes,4,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *MessagingChannelNumber `protobuf:"bytes,5,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Message        *OutboundMessage        `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMessageSimulatorNotification) Reset() {
	*x = SendMessageSimulatorNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageSimulatorNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageSimulatorNotification) ProtoMessage() {}

func (x *SendMessageSimulatorNotification) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageSimulatorNotification.ProtoReflect.Descriptor instead.
func (*SendMessageSimulatorNotification) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{7}
}

func (x *SendMessageSimulatorNotification) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *SendMessageSimulatorNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *SendMessageSimulatorNotification) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendMessageSimulatorNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *SendMessageSimulatorNotification) GetChannelNumber() *MessagingChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *SendMessageSimulatorNotification) GetMessage() *OutboundMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type MakeVoiceCallSimulatorNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId          string                  `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CustomerId     string                  `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	SessionId      string                  `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CustomerNumber *CustomerNumber         `protobuf:"bytes,4,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *MessagingChannelNumber `protobuf:"bytes,5,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
}

func (x *MakeVoiceCallSimulatorNotification) Reset() {
	*x = MakeVoiceCallSimulatorNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeVoiceCallSimulatorNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeVoiceCallSimulatorNotification) ProtoMessage() {}

func (x *MakeVoiceCallSimulatorNotification) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeVoiceCallSimulatorNotification.ProtoReflect.Descriptor instead.
func (*MakeVoiceCallSimulatorNotification) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{8}
}

func (x *MakeVoiceCallSimulatorNotification) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *MakeVoiceCallSimulatorNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *MakeVoiceCallSimulatorNotification) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MakeVoiceCallSimulatorNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *MakeVoiceCallSimulatorNotification) GetChannelNumber() *MessagingChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

type SendCustomerPaymentSimulatorNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId      string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CustomerId string `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	AppId      string `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// Types that are assignable to DebitParty:
	//	*SendCustomerPaymentSimulatorNotification_Wallet
	//	*SendCustomerPaymentSimulatorNotification_Purse
	DebitParty     isSendCustomerPaymentSimulatorNotification_DebitParty `protobuf_oneof:"debit_party"`
	TransactionId  string                                                `protobuf:"bytes,6,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	CustomerNumber *CustomerNumber                                       `protobuf:"bytes,7,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *PaymentChannelNumber                                 `protobuf:"bytes,8,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Value          *Cash                                                 `protobuf:"bytes,9,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SendCustomerPaymentSimulatorNotification) Reset() {
	*x = SendCustomerPaymentSimulatorNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCustomerPaymentSimulatorNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCustomerPaymentSimulatorNotification) ProtoMessage() {}

func (x *SendCustomerPaymentSimulatorNotification) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCustomerPaymentSimulatorNotification.ProtoReflect.Descriptor instead.
func (*SendCustomerPaymentSimulatorNotification) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{9}
}

func (x *SendCustomerPaymentSimulatorNotification) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *SendCustomerPaymentSimulatorNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *SendCustomerPaymentSimulatorNotification) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (m *SendCustomerPaymentSimulatorNotification) GetDebitParty() isSendCustomerPaymentSimulatorNotification_DebitParty {
	if m != nil {
		return m.DebitParty
	}
	return nil
}

func (x *SendCustomerPaymentSimulatorNotification) GetWallet() *PaymentWalletCounterParty {
	if x, ok := x.GetDebitParty().(*SendCustomerPaymentSimulatorNotification_Wallet); ok {
		return x.Wallet
	}
	return nil
}

func (x *SendCustomerPaymentSimulatorNotification) GetPurse() *PaymentPurseCounterParty {
	if x, ok := x.GetDebitParty().(*SendCustomerPaymentSimulatorNotification_Purse); ok {
		return x.Purse
	}
	return nil
}

func (x *SendCustomerPaymentSimulatorNotification) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *SendCustomerPaymentSimulatorNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *SendCustomerPaymentSimulatorNotification) GetChannelNumber() *PaymentChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *SendCustomerPaymentSimulatorNotification) GetValue() *Cash {
	if x != nil {
		return x.Value
	}
	return nil
}

type isSendCustomerPaymentSimulatorNotification_DebitParty interface {
	isSendCustomerPaymentSimulatorNotification_DebitParty()
}

type SendCustomerPaymentSimulatorNotification_Wallet struct {
	Wallet *PaymentWalletCounterParty `protobuf:"bytes,4,opt,name=wallet,proto3,oneof"`
}

type SendCustomerPaymentSimulatorNotification_Purse struct {
	Purse *PaymentPurseCounterParty `protobuf:"bytes,5,opt,name=purse,proto3,oneof"`
}

func (*SendCustomerPaymentSimulatorNotification_Wallet) isSendCustomerPaymentSimulatorNotification_DebitParty() {
}

func (*SendCustomerPaymentSimulatorNotification_Purse) isSendCustomerPaymentSimulatorNotification_DebitParty() {
}

type SendChannelPaymentSimulatorNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// Types that are assignable to DebitParty:
	//	*SendChannelPaymentSimulatorNotification_Wallet
	//	*SendChannelPaymentSimulatorNotification_Purse
	DebitParty    isSendChannelPaymentSimulatorNotification_DebitParty `protobuf_oneof:"debit_party"`
	TransactionId string                                               `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ChannelNumber *PaymentChannelNumber                                `protobuf:"bytes,6,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Account       *wrappers.StringValue                                `protobuf:"bytes,7,opt,name=account,proto3" json:"account,omitempty"`
	Value         *Cash                                                `protobuf:"bytes,8,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SendChannelPaymentSimulatorNotification) Reset() {
	*x = SendChannelPaymentSimulatorNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChannelPaymentSimulatorNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChannelPaymentSimulatorNotification) ProtoMessage() {}

func (x *SendChannelPaymentSimulatorNotification) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChannelPaymentSimulatorNotification.ProtoReflect.Descriptor instead.
func (*SendChannelPaymentSimulatorNotification) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{10}
}

func (x *SendChannelPaymentSimulatorNotification) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *SendChannelPaymentSimulatorNotification) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (m *SendChannelPaymentSimulatorNotification) GetDebitParty() isSendChannelPaymentSimulatorNotification_DebitParty {
	if m != nil {
		return m.DebitParty
	}
	return nil
}

func (x *SendChannelPaymentSimulatorNotification) GetWallet() *PaymentWalletCounterParty {
	if x, ok := x.GetDebitParty().(*SendChannelPaymentSimulatorNotification_Wallet); ok {
		return x.Wallet
	}
	return nil
}

func (x *SendChannelPaymentSimulatorNotification) GetPurse() *PaymentPurseCounterParty {
	if x, ok := x.GetDebitParty().(*SendChannelPaymentSimulatorNotification_Purse); ok {
		return x.Purse
	}
	return nil
}

func (x *SendChannelPaymentSimulatorNotification) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *SendChannelPaymentSimulatorNotification) GetChannelNumber() *PaymentChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *SendChannelPaymentSimulatorNotification) GetAccount() *wrappers.StringValue {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *SendChannelPaymentSimulatorNotification) GetValue() *Cash {
	if x != nil {
		return x.Value
	}
	return nil
}

type isSendChannelPaymentSimulatorNotification_DebitParty interface {
	isSendChannelPaymentSimulatorNotification_DebitParty()
}

type SendChannelPaymentSimulatorNotification_Wallet struct {
	Wallet *PaymentWalletCounterParty `protobuf:"bytes,3,opt,name=wallet,proto3,oneof"`
}

type SendChannelPaymentSimulatorNotification_Purse struct {
	Purse *PaymentPurseCounterParty `protobuf:"bytes,4,opt,name=purse,proto3,oneof"`
}

func (*SendChannelPaymentSimulatorNotification_Wallet) isSendChannelPaymentSimulatorNotification_DebitParty() {
}

func (*SendChannelPaymentSimulatorNotification_Purse) isSendChannelPaymentSimulatorNotification_DebitParty() {
}

type CheckoutPaymentSimulatorNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId      string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CustomerId string `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	AppId      string `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// Types that are assignable to CreditParty:
	//	*CheckoutPaymentSimulatorNotification_Wallet
	//	*CheckoutPaymentSimulatorNotification_Purse
	CreditParty    isCheckoutPaymentSimulatorNotification_CreditParty `protobuf_oneof:"credit_party"`
	TransactionId  string                                             `protobuf:"bytes,6,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	CustomerNumber *CustomerNumber                                    `protobuf:"bytes,7,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *PaymentChannelNumber                              `protobuf:"bytes,8,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Value          *Cash                                              `protobuf:"bytes,9,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CheckoutPaymentSimulatorNotification) Reset() {
	*x = CheckoutPaymentSimulatorNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simulator_socket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutPaymentSimulatorNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutPaymentSimulatorNotification) ProtoMessage() {}

func (x *CheckoutPaymentSimulatorNotification) ProtoReflect() protoreflect.Message {
	mi := &file_simulator_socket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutPaymentSimulatorNotification.ProtoReflect.Descriptor instead.
func (*CheckoutPaymentSimulatorNotification) Descriptor() ([]byte, []int) {
	return file_simulator_socket_proto_rawDescGZIP(), []int{11}
}

func (x *CheckoutPaymentSimulatorNotification) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *CheckoutPaymentSimulatorNotification) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CheckoutPaymentSimulatorNotification) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (m *CheckoutPaymentSimulatorNotification) GetCreditParty() isCheckoutPaymentSimulatorNotification_CreditParty {
	if m != nil {
		return m.CreditParty
	}
	return nil
}

func (x *CheckoutPaymentSimulatorNotification) GetWallet() *PaymentWalletCounterParty {
	if x, ok := x.GetCreditParty().(*CheckoutPaymentSimulatorNotification_Wallet); ok {
		return x.Wallet
	}
	return nil
}

func (x *CheckoutPaymentSimulatorNotification) GetPurse() *PaymentPurseCounterParty {
	if x, ok := x.GetCreditParty().(*CheckoutPaymentSimulatorNotification_Purse); ok {
		return x.Purse
	}
	return nil
}

func (x *CheckoutPaymentSimulatorNotification) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CheckoutPaymentSimulatorNotification) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *CheckoutPaymentSimulatorNotification) GetChannelNumber() *PaymentChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *CheckoutPaymentSimulatorNotification) GetValue() *Cash {
	if x != nil {
		return x.Value
	}
	return nil
}

type isCheckoutPaymentSimulatorNotification_CreditParty interface {
	isCheckoutPaymentSimulatorNotification_CreditParty()
}

type CheckoutPaymentSimulatorNotification_Wallet struct {
	Wallet *PaymentWalletCounterParty `protobuf:"bytes,4,opt,name=wallet,proto3,oneof"`
}

type CheckoutPaymentSimulatorNotification_Purse struct {
	Purse *PaymentPurseCounterParty `protobuf:"bytes,5,opt,name=purse,proto3,oneof"`
}

func (*CheckoutPaymentSimulatorNotification_Wallet) isCheckoutPaymentSimulatorNotification_CreditParty() {
}

func (*CheckoutPaymentSimulatorNotification_Purse) isCheckoutPaymentSimulatorNotification_CreditParty() {
}

var File_simulator_socket_proto protoreflect.FileDescriptor

var file_simulator_socket_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xdc, 0x02, 0x0a, 0x18, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x61, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x61, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x71, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48,
	0x00, 0x52, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0x9f, 0x02, 0x0a, 0x1e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xb8, 0x02, 0x0a, 0x1e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3d, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8b, 0x01, 0x0a,
	0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc5, 0x04, 0x0a, 0x1d, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x0c, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x73,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x6d, 0x61,
	0x6b, 0x65, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6b,
	0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x76, 0x0a, 0x15, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x73, 0x0a, 0x14, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x69, 0x0a,
	0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xe4, 0x02, 0x0a, 0x20, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa3,
	0x02, 0x0a, 0x22, 0x4d, 0x61, 0x6b, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x55, 0x0a,
	0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0xa0, 0x04, 0x0a, 0x28, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x4b, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68,
	0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x48, 0x00, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x48, 0x0a,
	0x05, 0x70, 0x75, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x72,
	0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x48, 0x00,
	0x52, 0x05, 0x70, 0x75, 0x72, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f,
	0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x53, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x73,
	0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x62, 0x69,
	0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x22, 0xe5, 0x03, 0x0a, 0x27, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x4b, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x48, 0x00, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x48,
	0x0a, 0x05, 0x70, 0x75, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x75,
	0x72, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x05, 0x70, 0x75, 0x72, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x53, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x22,
	0x9d, 0x04, 0x0a, 0x24, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x48, 0x00, 0x52, 0x06, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x70, 0x75, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x70, 0x75, 0x72, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_simulator_socket_proto_rawDescOnce sync.Once
	file_simulator_socket_proto_rawDescData = file_simulator_socket_proto_rawDesc
)

func file_simulator_socket_proto_rawDescGZIP() []byte {
	file_simulator_socket_proto_rawDescOnce.Do(func() {
		file_simulator_socket_proto_rawDescData = protoimpl.X.CompressGZIP(file_simulator_socket_proto_rawDescData)
	})
	return file_simulator_socket_proto_rawDescData
}

var file_simulator_socket_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_simulator_socket_proto_goTypes = []interface{}{
	(*SimulatorToServerCommand)(nil),                 // 0: com.elarian.hera.proto.SimulatorToServerCommand
	(*ReceiveMessageSimulatorCommand)(nil),           // 1: com.elarian.hera.proto.ReceiveMessageSimulatorCommand
	(*ReceivePaymentSimulatorCommand)(nil),           // 2: com.elarian.hera.proto.ReceivePaymentSimulatorCommand
	(*UpdatePaymentStatusSimulatorCommand)(nil),      // 3: com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand
	(*SimulatorToServerCommandReply)(nil),            // 4: com.elarian.hera.proto.SimulatorToServerCommandReply
	(*ServerToSimulatorNotification)(nil),            // 5: com.elarian.hera.proto.ServerToSimulatorNotification
	(*ServerToSimulatorNotificationReply)(nil),       // 6: com.elarian.hera.proto.ServerToSimulatorNotificationReply
	(*SendMessageSimulatorNotification)(nil),         // 7: com.elarian.hera.proto.SendMessageSimulatorNotification
	(*MakeVoiceCallSimulatorNotification)(nil),       // 8: com.elarian.hera.proto.MakeVoiceCallSimulatorNotification
	(*SendCustomerPaymentSimulatorNotification)(nil), // 9: com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification
	(*SendChannelPaymentSimulatorNotification)(nil),  // 10: com.elarian.hera.proto.SendChannelPaymentSimulatorNotification
	(*CheckoutPaymentSimulatorNotification)(nil),     // 11: com.elarian.hera.proto.CheckoutPaymentSimulatorNotification
	(*MessagingChannelNumber)(nil),                   // 12: com.elarian.hera.proto.MessagingChannelNumber
	(*InboundMessageBody)(nil),                       // 13: com.elarian.hera.proto.InboundMessageBody
	(*wrappers.StringValue)(nil),                     // 14: google.protobuf.StringValue
	(*PaymentChannelNumber)(nil),                     // 15: com.elarian.hera.proto.PaymentChannelNumber
	(*Cash)(nil),                                     // 16: com.elarian.hera.proto.Cash
	(PaymentStatus)(0),                               // 17: com.elarian.hera.proto.PaymentStatus
	(*OutboundMessage)(nil),                          // 18: com.elarian.hera.proto.OutboundMessage
	(*CustomerNumber)(nil),                           // 19: com.elarian.hera.proto.CustomerNumber
	(*PaymentWalletCounterParty)(nil),                // 20: com.elarian.hera.proto.PaymentWalletCounterParty
	(*PaymentPurseCounterParty)(nil),                 // 21: com.elarian.hera.proto.PaymentPurseCounterParty
}
var file_simulator_socket_proto_depIdxs = []int32{
	1,  // 0: com.elarian.hera.proto.SimulatorToServerCommand.receive_message:type_name -> com.elarian.hera.proto.ReceiveMessageSimulatorCommand
	2,  // 1: com.elarian.hera.proto.SimulatorToServerCommand.receive_payment:type_name -> com.elarian.hera.proto.ReceivePaymentSimulatorCommand
	3,  // 2: com.elarian.hera.proto.SimulatorToServerCommand.update_payment_status:type_name -> com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand
	12, // 3: com.elarian.hera.proto.ReceiveMessageSimulatorCommand.channel_number:type_name -> com.elarian.hera.proto.MessagingChannelNumber
	13, // 4: com.elarian.hera.proto.ReceiveMessageSimulatorCommand.parts:type_name -> com.elarian.hera.proto.InboundMessageBody
	14, // 5: com.elarian.hera.proto.ReceiveMessageSimulatorCommand.session_id:type_name -> google.protobuf.StringValue
	15, // 6: com.elarian.hera.proto.ReceivePaymentSimulatorCommand.channel_number:type_name -> com.elarian.hera.proto.PaymentChannelNumber
	16, // 7: com.elarian.hera.proto.ReceivePaymentSimulatorCommand.value:type_name -> com.elarian.hera.proto.Cash
	17, // 8: com.elarian.hera.proto.ReceivePaymentSimulatorCommand.status:type_name -> com.elarian.hera.proto.PaymentStatus
	17, // 9: com.elarian.hera.proto.UpdatePaymentStatusSimulatorCommand.status:type_name -> com.elarian.hera.proto.PaymentStatus
	18, // 10: com.elarian.hera.proto.SimulatorToServerCommandReply.message:type_name -> com.elarian.hera.proto.OutboundMessage
	7,  // 11: com.elarian.hera.proto.ServerToSimulatorNotification.send_message:type_name -> com.elarian.hera.proto.SendMessageSimulatorNotification
	8,  // 12: com.elarian.hera.proto.ServerToSimulatorNotification.make_voice_call:type_name -> com.elarian.hera.proto.MakeVoiceCallSimulatorNotification
	9,  // 13: com.elarian.hera.proto.ServerToSimulatorNotification.send_customer_payment:type_name -> com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification
	10, // 14: com.elarian.hera.proto.ServerToSimulatorNotification.send_channel_payment:type_name -> com.elarian.hera.proto.SendChannelPaymentSimulatorNotification
	11, // 15: com.elarian.hera.proto.ServerToSimulatorNotification.checkout_payment:type_name -> com.elarian.hera.proto.CheckoutPaymentSimulatorNotification
	19, // 16: com.elarian.hera.proto.SendMessageSimulatorNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	12, // 17: com.elarian.hera.proto.SendMessageSimulatorNotification.channel_number:type_name -> com.elarian.hera.proto.MessagingChannelNumber
	18, // 18: com.elarian.hera.proto.SendMessageSimulatorNotification.message:type_name -> com.elarian.hera.proto.OutboundMessage
	19, // 19: com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	12, // 20: com.elarian.hera.proto.MakeVoiceCallSimulatorNotification.channel_number:type_name -> com.elarian.hera.proto.MessagingChannelNumber
	20, // 21: com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.wallet:type_name -> com.elarian.hera.proto.PaymentWalletCounterParty
	21, // 22: com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.purse:type_name -> com.elarian.hera.proto.PaymentPurseCounterParty
	19, // 23: com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	15, // 24: com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.channel_number:type_name -> com.elarian.hera.proto.PaymentChannelNumber
	16, // 25: com.elarian.hera.proto.SendCustomerPaymentSimulatorNotification.value:type_name -> com.elarian.hera.proto.Cash
	20, // 26: com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.wallet:type_name -> com.elarian.hera.proto.PaymentWalletCounterParty
	21, // 27: com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.purse:type_name -> com.elarian.hera.proto.PaymentPurseCounterParty
	15, // 28: com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.channel_number:type_name -> com.elarian.hera.proto.PaymentChannelNumber
	14, // 29: com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.account:type_name -> google.protobuf.StringValue
	16, // 30: com.elarian.hera.proto.SendChannelPaymentSimulatorNotification.value:type_name -> com.elarian.hera.proto.Cash
	20, // 31: com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.wallet:type_name -> com.elarian.hera.proto.PaymentWalletCounterParty
	21, // 32: com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.purse:type_name -> com.elarian.hera.proto.PaymentPurseCounterParty
	19, // 33: com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	15, // 34: com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.channel_number:type_name -> com.elarian.hera.proto.PaymentChannelNumber
	16, // 35: com.elarian.hera.proto.CheckoutPaymentSimulatorNotification.value:type_name -> com.elarian.hera.proto.Cash
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_simulator_socket_proto_init() }
func file_simulator_socket_proto_init() {
	if File_simulator_socket_proto != nil {
		return
	}
	file_common_model_proto_init()
	file_messaging_model_proto_init()
	file_payment_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_simulator_socket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimulatorToServerCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveMessageSimulatorCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivePaymentSimulatorCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentStatusSimulatorCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimulatorToServerCommandReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToSimulatorNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToSimulatorNotificationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageSimulatorNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeVoiceCallSimulatorNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCustomerPaymentSimulatorNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChannelPaymentSimulatorNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simulator_socket_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutPaymentSimulatorNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_simulator_socket_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SimulatorToServerCommand_ReceiveMessage)(nil),
		(*SimulatorToServerCommand_ReceivePayment)(nil),
		(*SimulatorToServerCommand_UpdatePaymentStatus)(nil),
	}
	file_simulator_socket_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ServerToSimulatorNotification_SendMessage)(nil),
		(*ServerToSimulatorNotification_MakeVoiceCall)(nil),
		(*ServerToSimulatorNotification_SendCustomerPayment)(nil),
		(*ServerToSimulatorNotification_SendChannelPayment)(nil),
		(*ServerToSimulatorNotification_CheckoutPayment)(nil),
	}
	file_simulator_socket_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*SendCustomerPaymentSimulatorNotification_Wallet)(nil),
		(*SendCustomerPaymentSimulatorNotification_Purse)(nil),
	}
	file_simulator_socket_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*SendChannelPaymentSimulatorNotification_Wallet)(nil),
		(*SendChannelPaymentSimulatorNotification_Purse)(nil),
	}
	file_simulator_socket_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*CheckoutPaymentSimulatorNotification_Wallet)(nil),
		(*CheckoutPaymentSimulatorNotification_Purse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_simulator_socket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_simulator_socket_proto_goTypes,
		DependencyIndexes: file_simulator_socket_proto_depIdxs,
		MessageInfos:      file_simulator_socket_proto_msgTypes,
	}.Build()
	File_simulator_socket_proto = out.File
	file_simulator_socket_proto_rawDesc = nil
	file_simulator_socket_proto_goTypes = nil
	file_simulator_socket_proto_depIdxs = nil
}
