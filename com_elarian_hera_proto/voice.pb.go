// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: voice.proto

package com_elarian_hera_proto

import (
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type VoiceCallStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction      CustomerEventDirection `protobuf:"varint,1,opt,name=direction,proto3,enum=com.elarian.hera.proto.CustomerEventDirection" json:"direction,omitempty"`
	CustomerNumber *CustomerNumber        `protobuf:"bytes,2,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *VoiceChannelNumber    `protobuf:"bytes,3,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	SessionId      string                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	AppId          *wrappers.StringValue  `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Status         VoiceCallStatus        `protobuf:"varint,6,opt,name=status,proto3,enum=com.elarian.hera.proto.VoiceCallStatus" json:"status,omitempty"`
	Hops           []*VoiceCallHop        `protobuf:"bytes,7,rep,name=hops,proto3" json:"hops,omitempty"`
	Duration       *duration.Duration     `protobuf:"bytes,8,opt,name=duration,proto3" json:"duration,omitempty"`
	Cost           *Cash                  `protobuf:"bytes,9,opt,name=cost,proto3" json:"cost,omitempty"`
	CreatedAt      *timestamp.Timestamp   `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp   `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *VoiceCallStateEntry) Reset() {
	*x = VoiceCallStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceCallStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceCallStateEntry) ProtoMessage() {}

func (x *VoiceCallStateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceCallStateEntry.ProtoReflect.Descriptor instead.
func (*VoiceCallStateEntry) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{0}
}

func (x *VoiceCallStateEntry) GetDirection() CustomerEventDirection {
	if x != nil {
		return x.Direction
	}
	return CustomerEventDirection_CUSTOMER_EVENT_DIRECTION_UNSPECIFIED
}

func (x *VoiceCallStateEntry) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *VoiceCallStateEntry) GetChannelNumber() *VoiceChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *VoiceCallStateEntry) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *VoiceCallStateEntry) GetAppId() *wrappers.StringValue {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *VoiceCallStateEntry) GetStatus() VoiceCallStatus {
	if x != nil {
		return x.Status
	}
	return VoiceCallStatus_VOICE_CALL_STATUS_UNSPECIFIED
}

func (x *VoiceCallStateEntry) GetHops() []*VoiceCallHop {
	if x != nil {
		return x.Hops
	}
	return nil
}

func (x *VoiceCallStateEntry) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *VoiceCallStateEntry) GetCost() *Cash {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *VoiceCallStateEntry) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VoiceCallStateEntry) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VoiceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls           []*VoiceCallStateEntry `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
	CustomerNumbers []*CustomerNumber      `protobuf:"bytes,2,rep,name=customer_numbers,json=customerNumbers,proto3" json:"customer_numbers,omitempty"`
	ChannelNumbers  []*VoiceChannelNumber  `protobuf:"bytes,3,rep,name=channel_numbers,json=channelNumbers,proto3" json:"channel_numbers,omitempty"`
}

func (x *VoiceState) Reset() {
	*x = VoiceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceState) ProtoMessage() {}

func (x *VoiceState) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceState.ProtoReflect.Descriptor instead.
func (*VoiceState) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{1}
}

func (x *VoiceState) GetCalls() []*VoiceCallStateEntry {
	if x != nil {
		return x.Calls
	}
	return nil
}

func (x *VoiceState) GetCustomerNumbers() []*CustomerNumber {
	if x != nil {
		return x.CustomerNumbers
	}
	return nil
}

func (x *VoiceState) GetChannelNumbers() []*VoiceChannelNumber {
	if x != nil {
		return x.ChannelNumbers
	}
	return nil
}

type VoiceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*VoiceEvent_StateAdopted
	//	*VoiceEvent_EntityDecommissioned
	//	*VoiceEvent_VoiceCallMade
	//	*VoiceEvent_VoiceCallStatusUpdated
	//	*VoiceEvent_VoiceCallHopCompleted
	Event isVoiceEvent_Event `protobuf_oneof:"event"`
}

func (x *VoiceEvent) Reset() {
	*x = VoiceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceEvent) ProtoMessage() {}

func (x *VoiceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceEvent.ProtoReflect.Descriptor instead.
func (*VoiceEvent) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{2}
}

func (m *VoiceEvent) GetEvent() isVoiceEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *VoiceEvent) GetStateAdopted() *VoiceStateAdoptedEvent {
	if x, ok := x.GetEvent().(*VoiceEvent_StateAdopted); ok {
		return x.StateAdopted
	}
	return nil
}

func (x *VoiceEvent) GetEntityDecommissioned() *VoiceEntityDecommissionedEvent {
	if x, ok := x.GetEvent().(*VoiceEvent_EntityDecommissioned); ok {
		return x.EntityDecommissioned
	}
	return nil
}

func (x *VoiceEvent) GetVoiceCallMade() *VoiceCallMadeEvent {
	if x, ok := x.GetEvent().(*VoiceEvent_VoiceCallMade); ok {
		return x.VoiceCallMade
	}
	return nil
}

func (x *VoiceEvent) GetVoiceCallStatusUpdated() *VoiceCallStatusUpdatedEvent {
	if x, ok := x.GetEvent().(*VoiceEvent_VoiceCallStatusUpdated); ok {
		return x.VoiceCallStatusUpdated
	}
	return nil
}

func (x *VoiceEvent) GetVoiceCallHopCompleted() *VoiceCallHopCompletedEvent {
	if x, ok := x.GetEvent().(*VoiceEvent_VoiceCallHopCompleted); ok {
		return x.VoiceCallHopCompleted
	}
	return nil
}

type isVoiceEvent_Event interface {
	isVoiceEvent_Event()
}

type VoiceEvent_StateAdopted struct {
	StateAdopted *VoiceStateAdoptedEvent `protobuf:"bytes,1,opt,name=state_adopted,json=stateAdopted,proto3,oneof"`
}

type VoiceEvent_EntityDecommissioned struct {
	EntityDecommissioned *VoiceEntityDecommissionedEvent `protobuf:"bytes,2,opt,name=entity_decommissioned,json=entityDecommissioned,proto3,oneof"`
}

type VoiceEvent_VoiceCallMade struct {
	VoiceCallMade *VoiceCallMadeEvent `protobuf:"bytes,3,opt,name=voice_call_made,json=voiceCallMade,proto3,oneof"`
}

type VoiceEvent_VoiceCallStatusUpdated struct {
	VoiceCallStatusUpdated *VoiceCallStatusUpdatedEvent `protobuf:"bytes,4,opt,name=voice_call_status_updated,json=voiceCallStatusUpdated,proto3,oneof"`
}

type VoiceEvent_VoiceCallHopCompleted struct {
	VoiceCallHopCompleted *VoiceCallHopCompletedEvent `protobuf:"bytes,5,opt,name=voice_call_hop_completed,json=voiceCallHopCompleted,proto3,oneof"`
}

func (*VoiceEvent_StateAdopted) isVoiceEvent_Event() {}

func (*VoiceEvent_EntityDecommissioned) isVoiceEvent_Event() {}

func (*VoiceEvent_VoiceCallMade) isVoiceEvent_Event() {}

func (*VoiceEvent_VoiceCallStatusUpdated) isVoiceEvent_Event() {}

func (*VoiceEvent_VoiceCallHopCompleted) isVoiceEvent_Event() {}

type VoiceStateAdoptedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId           string               `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CustomerId      string               `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Timestamp       *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AppHeaders      *AppHeaders          `protobuf:"bytes,4,opt,name=app_headers,json=appHeaders,proto3" json:"app_headers,omitempty"`
	OtherCustomerId string               `protobuf:"bytes,5,opt,name=other_customer_id,json=otherCustomerId,proto3" json:"other_customer_id,omitempty"`
	OtherVoiceState *VoiceState          `protobuf:"bytes,6,opt,name=other_voice_state,json=otherVoiceState,proto3" json:"other_voice_state,omitempty"`
}

func (x *VoiceStateAdoptedEvent) Reset() {
	*x = VoiceStateAdoptedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceStateAdoptedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceStateAdoptedEvent) ProtoMessage() {}

func (x *VoiceStateAdoptedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceStateAdoptedEvent.ProtoReflect.Descriptor instead.
func (*VoiceStateAdoptedEvent) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{3}
}

func (x *VoiceStateAdoptedEvent) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *VoiceStateAdoptedEvent) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *VoiceStateAdoptedEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VoiceStateAdoptedEvent) GetAppHeaders() *AppHeaders {
	if x != nil {
		return x.AppHeaders
	}
	return nil
}

func (x *VoiceStateAdoptedEvent) GetOtherCustomerId() string {
	if x != nil {
		return x.OtherCustomerId
	}
	return ""
}

func (x *VoiceStateAdoptedEvent) GetOtherVoiceState() *VoiceState {
	if x != nil {
		return x.OtherVoiceState
	}
	return nil
}

type VoiceEntityDecommissionedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId         string               `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CustomerId    string               `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Timestamp     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AppHeaders    *AppHeaders          `protobuf:"bytes,4,opt,name=app_headers,json=appHeaders,proto3" json:"app_headers,omitempty"`
	NewCustomerId string               `protobuf:"bytes,5,opt,name=new_customer_id,json=newCustomerId,proto3" json:"new_customer_id,omitempty"`
}

func (x *VoiceEntityDecommissionedEvent) Reset() {
	*x = VoiceEntityDecommissionedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceEntityDecommissionedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceEntityDecommissionedEvent) ProtoMessage() {}

func (x *VoiceEntityDecommissionedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceEntityDecommissionedEvent.ProtoReflect.Descriptor instead.
func (*VoiceEntityDecommissionedEvent) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{4}
}

func (x *VoiceEntityDecommissionedEvent) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *VoiceEntityDecommissionedEvent) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *VoiceEntityDecommissionedEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VoiceEntityDecommissionedEvent) GetAppHeaders() *AppHeaders {
	if x != nil {
		return x.AppHeaders
	}
	return nil
}

func (x *VoiceEntityDecommissionedEvent) GetNewCustomerId() string {
	if x != nil {
		return x.NewCustomerId
	}
	return ""
}

type VoiceCallMadeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId          string               `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CustomerId     string               `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Timestamp      *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AppHeaders     *AppHeaders          `protobuf:"bytes,4,opt,name=app_headers,json=appHeaders,proto3" json:"app_headers,omitempty"`
	AppId          string               `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	SessionId      string               `protobuf:"bytes,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CustomerNumber *CustomerNumber      `protobuf:"bytes,7,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *VoiceChannelNumber  `protobuf:"bytes,8,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Status         VoiceCallStatus      `protobuf:"varint,9,opt,name=status,proto3,enum=com.elarian.hera.proto.VoiceCallStatus" json:"status,omitempty"`
}

func (x *VoiceCallMadeEvent) Reset() {
	*x = VoiceCallMadeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceCallMadeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceCallMadeEvent) ProtoMessage() {}

func (x *VoiceCallMadeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceCallMadeEvent.ProtoReflect.Descriptor instead.
func (*VoiceCallMadeEvent) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{5}
}

func (x *VoiceCallMadeEvent) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *VoiceCallMadeEvent) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *VoiceCallMadeEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VoiceCallMadeEvent) GetAppHeaders() *AppHeaders {
	if x != nil {
		return x.AppHeaders
	}
	return nil
}

func (x *VoiceCallMadeEvent) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *VoiceCallMadeEvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *VoiceCallMadeEvent) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *VoiceCallMadeEvent) GetChannelNumber() *VoiceChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *VoiceCallMadeEvent) GetStatus() VoiceCallStatus {
	if x != nil {
		return x.Status
	}
	return VoiceCallStatus_VOICE_CALL_STATUS_UNSPECIFIED
}

type VoiceCallStatusUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId      string               `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CustomerId string               `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Timestamp  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SessionId  string               `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Status     VoiceCallStatus      `protobuf:"varint,5,opt,name=status,proto3,enum=com.elarian.hera.proto.VoiceCallStatus" json:"status,omitempty"`
}

func (x *VoiceCallStatusUpdatedEvent) Reset() {
	*x = VoiceCallStatusUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceCallStatusUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceCallStatusUpdatedEvent) ProtoMessage() {}

func (x *VoiceCallStatusUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceCallStatusUpdatedEvent.ProtoReflect.Descriptor instead.
func (*VoiceCallStatusUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{6}
}

func (x *VoiceCallStatusUpdatedEvent) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *VoiceCallStatusUpdatedEvent) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *VoiceCallStatusUpdatedEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VoiceCallStatusUpdatedEvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *VoiceCallStatusUpdatedEvent) GetStatus() VoiceCallStatus {
	if x != nil {
		return x.Status
	}
	return VoiceCallStatus_VOICE_CALL_STATUS_UNSPECIFIED
}

type VoiceCallHopCompletedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId          string                 `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CustomerId     string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Timestamp      *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AppId          *wrappers.StringValue  `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	SessionId      string                 `protobuf:"bytes,5,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CustomerNumber *CustomerNumber        `protobuf:"bytes,6,opt,name=customer_number,json=customerNumber,proto3" json:"customer_number,omitempty"`
	ChannelNumber  *VoiceChannelNumber    `protobuf:"bytes,7,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	Direction      CustomerEventDirection `protobuf:"varint,8,opt,name=direction,proto3,enum=com.elarian.hera.proto.CustomerEventDirection" json:"direction,omitempty"`
	Hop            *VoiceCallHop          `protobuf:"bytes,9,opt,name=hop,proto3" json:"hop,omitempty"`
	Duration       *duration.Duration     `protobuf:"bytes,10,opt,name=duration,proto3" json:"duration,omitempty"`
	Cost           *Cash                  `protobuf:"bytes,11,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *VoiceCallHopCompletedEvent) Reset() {
	*x = VoiceCallHopCompletedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceCallHopCompletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceCallHopCompletedEvent) ProtoMessage() {}

func (x *VoiceCallHopCompletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceCallHopCompletedEvent.ProtoReflect.Descriptor instead.
func (*VoiceCallHopCompletedEvent) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{7}
}

func (x *VoiceCallHopCompletedEvent) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *VoiceCallHopCompletedEvent) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *VoiceCallHopCompletedEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VoiceCallHopCompletedEvent) GetAppId() *wrappers.StringValue {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *VoiceCallHopCompletedEvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *VoiceCallHopCompletedEvent) GetCustomerNumber() *CustomerNumber {
	if x != nil {
		return x.CustomerNumber
	}
	return nil
}

func (x *VoiceCallHopCompletedEvent) GetChannelNumber() *VoiceChannelNumber {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

func (x *VoiceCallHopCompletedEvent) GetDirection() CustomerEventDirection {
	if x != nil {
		return x.Direction
	}
	return CustomerEventDirection_CUSTOMER_EVENT_DIRECTION_UNSPECIFIED
}

func (x *VoiceCallHopCompletedEvent) GetHop() *VoiceCallHop {
	if x != nil {
		return x.Hop
	}
	return nil
}

func (x *VoiceCallHopCompletedEvent) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *VoiceCallHopCompletedEvent) GetCost() *Cash {
	if x != nil {
		return x.Cost
	}
	return nil
}

var File_voice_proto protoreflect.FileDescriptor

var file_voice_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x05, 0x0a, 0x13, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x68, 0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x48, 0x6f, 0x70, 0x52, 0x04, 0x68, 0x6f, 0x70, 0x73, 0x12, 0x35, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x73, 0x68,
	0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf7, 0x01, 0x0a,
	0x0a, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x63,
	0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x51,
	0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x53, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x92, 0x04, 0x0a, 0x0a, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x64, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x15,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x14, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x0f, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x61, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x61, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0d, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x61, 0x64,
	0x65, 0x12, 0x70, 0x0a, 0x19, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x16, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x18, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x15, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x16,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6f, 0x70, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x43, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x11, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xff, 0x01, 0x0a, 0x1e, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x43,
	0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x77, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe6, 0x03, 0x0a, 0x12,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x61, 0x64, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x43, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x51, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf5, 0x04, 0x0a, 0x1a, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x48, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x4c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a,
	0x03, 0x68, 0x6f, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x6f, 0x70,
	0x52, 0x03, 0x68, 0x6f, 0x70, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x68, 0x65, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_voice_proto_rawDescOnce sync.Once
	file_voice_proto_rawDescData = file_voice_proto_rawDesc
)

func file_voice_proto_rawDescGZIP() []byte {
	file_voice_proto_rawDescOnce.Do(func() {
		file_voice_proto_rawDescData = protoimpl.X.CompressGZIP(file_voice_proto_rawDescData)
	})
	return file_voice_proto_rawDescData
}

var file_voice_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_voice_proto_goTypes = []interface{}{
	(*VoiceCallStateEntry)(nil),            // 0: com.elarian.hera.proto.VoiceCallStateEntry
	(*VoiceState)(nil),                     // 1: com.elarian.hera.proto.VoiceState
	(*VoiceEvent)(nil),                     // 2: com.elarian.hera.proto.VoiceEvent
	(*VoiceStateAdoptedEvent)(nil),         // 3: com.elarian.hera.proto.VoiceStateAdoptedEvent
	(*VoiceEntityDecommissionedEvent)(nil), // 4: com.elarian.hera.proto.VoiceEntityDecommissionedEvent
	(*VoiceCallMadeEvent)(nil),             // 5: com.elarian.hera.proto.VoiceCallMadeEvent
	(*VoiceCallStatusUpdatedEvent)(nil),    // 6: com.elarian.hera.proto.VoiceCallStatusUpdatedEvent
	(*VoiceCallHopCompletedEvent)(nil),     // 7: com.elarian.hera.proto.VoiceCallHopCompletedEvent
	(CustomerEventDirection)(0),            // 8: com.elarian.hera.proto.CustomerEventDirection
	(*CustomerNumber)(nil),                 // 9: com.elarian.hera.proto.CustomerNumber
	(*VoiceChannelNumber)(nil),             // 10: com.elarian.hera.proto.VoiceChannelNumber
	(*wrappers.StringValue)(nil),           // 11: google.protobuf.StringValue
	(VoiceCallStatus)(0),                   // 12: com.elarian.hera.proto.VoiceCallStatus
	(*VoiceCallHop)(nil),                   // 13: com.elarian.hera.proto.VoiceCallHop
	(*duration.Duration)(nil),              // 14: google.protobuf.Duration
	(*Cash)(nil),                           // 15: com.elarian.hera.proto.Cash
	(*timestamp.Timestamp)(nil),            // 16: google.protobuf.Timestamp
	(*AppHeaders)(nil),                     // 17: com.elarian.hera.proto.AppHeaders
}
var file_voice_proto_depIdxs = []int32{
	8,  // 0: com.elarian.hera.proto.VoiceCallStateEntry.direction:type_name -> com.elarian.hera.proto.CustomerEventDirection
	9,  // 1: com.elarian.hera.proto.VoiceCallStateEntry.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	10, // 2: com.elarian.hera.proto.VoiceCallStateEntry.channel_number:type_name -> com.elarian.hera.proto.VoiceChannelNumber
	11, // 3: com.elarian.hera.proto.VoiceCallStateEntry.app_id:type_name -> google.protobuf.StringValue
	12, // 4: com.elarian.hera.proto.VoiceCallStateEntry.status:type_name -> com.elarian.hera.proto.VoiceCallStatus
	13, // 5: com.elarian.hera.proto.VoiceCallStateEntry.hops:type_name -> com.elarian.hera.proto.VoiceCallHop
	14, // 6: com.elarian.hera.proto.VoiceCallStateEntry.duration:type_name -> google.protobuf.Duration
	15, // 7: com.elarian.hera.proto.VoiceCallStateEntry.cost:type_name -> com.elarian.hera.proto.Cash
	16, // 8: com.elarian.hera.proto.VoiceCallStateEntry.created_at:type_name -> google.protobuf.Timestamp
	16, // 9: com.elarian.hera.proto.VoiceCallStateEntry.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 10: com.elarian.hera.proto.VoiceState.calls:type_name -> com.elarian.hera.proto.VoiceCallStateEntry
	9,  // 11: com.elarian.hera.proto.VoiceState.customer_numbers:type_name -> com.elarian.hera.proto.CustomerNumber
	10, // 12: com.elarian.hera.proto.VoiceState.channel_numbers:type_name -> com.elarian.hera.proto.VoiceChannelNumber
	3,  // 13: com.elarian.hera.proto.VoiceEvent.state_adopted:type_name -> com.elarian.hera.proto.VoiceStateAdoptedEvent
	4,  // 14: com.elarian.hera.proto.VoiceEvent.entity_decommissioned:type_name -> com.elarian.hera.proto.VoiceEntityDecommissionedEvent
	5,  // 15: com.elarian.hera.proto.VoiceEvent.voice_call_made:type_name -> com.elarian.hera.proto.VoiceCallMadeEvent
	6,  // 16: com.elarian.hera.proto.VoiceEvent.voice_call_status_updated:type_name -> com.elarian.hera.proto.VoiceCallStatusUpdatedEvent
	7,  // 17: com.elarian.hera.proto.VoiceEvent.voice_call_hop_completed:type_name -> com.elarian.hera.proto.VoiceCallHopCompletedEvent
	16, // 18: com.elarian.hera.proto.VoiceStateAdoptedEvent.timestamp:type_name -> google.protobuf.Timestamp
	17, // 19: com.elarian.hera.proto.VoiceStateAdoptedEvent.app_headers:type_name -> com.elarian.hera.proto.AppHeaders
	1,  // 20: com.elarian.hera.proto.VoiceStateAdoptedEvent.other_voice_state:type_name -> com.elarian.hera.proto.VoiceState
	16, // 21: com.elarian.hera.proto.VoiceEntityDecommissionedEvent.timestamp:type_name -> google.protobuf.Timestamp
	17, // 22: com.elarian.hera.proto.VoiceEntityDecommissionedEvent.app_headers:type_name -> com.elarian.hera.proto.AppHeaders
	16, // 23: com.elarian.hera.proto.VoiceCallMadeEvent.timestamp:type_name -> google.protobuf.Timestamp
	17, // 24: com.elarian.hera.proto.VoiceCallMadeEvent.app_headers:type_name -> com.elarian.hera.proto.AppHeaders
	9,  // 25: com.elarian.hera.proto.VoiceCallMadeEvent.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	10, // 26: com.elarian.hera.proto.VoiceCallMadeEvent.channel_number:type_name -> com.elarian.hera.proto.VoiceChannelNumber
	12, // 27: com.elarian.hera.proto.VoiceCallMadeEvent.status:type_name -> com.elarian.hera.proto.VoiceCallStatus
	16, // 28: com.elarian.hera.proto.VoiceCallStatusUpdatedEvent.timestamp:type_name -> google.protobuf.Timestamp
	12, // 29: com.elarian.hera.proto.VoiceCallStatusUpdatedEvent.status:type_name -> com.elarian.hera.proto.VoiceCallStatus
	16, // 30: com.elarian.hera.proto.VoiceCallHopCompletedEvent.timestamp:type_name -> google.protobuf.Timestamp
	11, // 31: com.elarian.hera.proto.VoiceCallHopCompletedEvent.app_id:type_name -> google.protobuf.StringValue
	9,  // 32: com.elarian.hera.proto.VoiceCallHopCompletedEvent.customer_number:type_name -> com.elarian.hera.proto.CustomerNumber
	10, // 33: com.elarian.hera.proto.VoiceCallHopCompletedEvent.channel_number:type_name -> com.elarian.hera.proto.VoiceChannelNumber
	8,  // 34: com.elarian.hera.proto.VoiceCallHopCompletedEvent.direction:type_name -> com.elarian.hera.proto.CustomerEventDirection
	13, // 35: com.elarian.hera.proto.VoiceCallHopCompletedEvent.hop:type_name -> com.elarian.hera.proto.VoiceCallHop
	14, // 36: com.elarian.hera.proto.VoiceCallHopCompletedEvent.duration:type_name -> google.protobuf.Duration
	15, // 37: com.elarian.hera.proto.VoiceCallHopCompletedEvent.cost:type_name -> com.elarian.hera.proto.Cash
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_voice_proto_init() }
func file_voice_proto_init() {
	if File_voice_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_voice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceCallStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceStateAdoptedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceEntityDecommissionedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceCallMadeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceCallStatusUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceCallHopCompletedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_voice_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*VoiceEvent_StateAdopted)(nil),
		(*VoiceEvent_EntityDecommissioned)(nil),
		(*VoiceEvent_VoiceCallMade)(nil),
		(*VoiceEvent_VoiceCallStatusUpdated)(nil),
		(*VoiceEvent_VoiceCallHopCompleted)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_voice_proto_goTypes,
		DependencyIndexes: file_voice_proto_depIdxs,
		MessageInfos:      file_voice_proto_msgTypes,
	}.Build()
	File_voice_proto = out.File
	file_voice_proto_rawDesc = nil
	file_voice_proto_goTypes = nil
	file_voice_proto_depIdxs = nil
}
